##############################################################
# OpenClinica extract properties file - Tom Hickerson, Jamuna Nyapathi, Paul Galvin April 16 2011

# copyright Akaza Research, 2011

# OpenClinica's Extract Data module natively produces CDISC ODM XML
# datasets (ODM version 1.3 with OpenClinica Extensions). Multiple extract
# formats can be configured by including XML stylesheets (XSLs) that
# transform the data into different output formats. Output formats may be
# a file that is also XML or another format like HTML, SQL, tab-delimited, etc.
# Additionally, post-processing plug-ins are supported that can further transform
# or route the output.

# The main goals of this file:
# 1. Define xsl file locations, their descriptions, and the location/filename of
# their output
# 2. Define post-processing actions

# Currently supported postprocessing options:
# -- SQL push to a DB -
# -- generate a set of PDFs
##############################################################

##############################################################
# This file currently supports the properties listed below.  A brief explanation of each property
# will be provided along with an explanation of best practices that should be used.  Each
# property will begin with extract.X. where X is a digit.

# odmType = This will be the type of ODM file to be fed into the XSLT engine.
# 		The only options are full and clinical_data.

# file = This will be the name of the XSL that should be applied to the
# 	   ODM XML file being fed into the XSLT engine.

# fileDescription = This will be the text that appears on the View Dataset
# 			  page describing what type of format the data will be provided in.

# linkText = This will be the text displayed to the user over the hyperlink
# 	       that will kick off the export process

# helpText = This will be the text that hovers over the hyperlink text
#		 in the linkText property.

# location = This will be the location the exported dataset should be saved to.
# 		 We recommend you do not save different exports or formats in the same
# 		 directory if deleteOld=true.

# exportname = This will be the name of the dataset output file.  Can be a comma
# 		   separated list if two files must be generated.  Make sure zip=true in this case

# zip = This will state whether the final output should be zipped or not.
# 	  The only values allowed are true and false.  The recommended value is true.
# 	  If the export format requires two files to be generated,
# 	  you must set this value to true

# deleteOld = This will determine whether the previously run exports for
# 		  this dataset in this format are deleted from the server when a new export
# 		  process is kicked off.  If the location field contains any variables where
# 		  the generated file will be saved in a different location every time, this
# 		  parameter will not work.  If the location field is shared amongst many
# 		  datsets and formats, if the value is true all old files in the directory
# 		  will be deleted.

# success = This will be the message that is sent via email and displayed in the UI
# 		to the user who kicked off the data export and it will contain a link to
# 		download the filewhen it has successfully finished.

# failure = This will be the message that is sent via email to the user who
# 		kicked off the dataset if the export process failed in anyway.

# post = If you are defining a post processor, this will be the variable of that
# 	   particular post processor.  Please see the post processor section for more information
##############################################################

##############################################################
# extract.number defines how many subjects the system will paginate through when creating the ODM file to
# to be transformed by the XSLT engine.  This number can be increased to use higher amounts of memory and
# potentially decrease the amount of wait time.  Lower this number if you have an extremely large amount of
# event definitions to reduce the impact on concurrent users in the system at the time of the extract.
# This is a global setting that applies to all extracts in your OpenClinica instance.
#####################################################################################
extract.number=99
##############################################################

##############################################################
# Extract Formats
##############################################################

##############################################################
# 1. XSL File and Description
#
# ***NOTE*** The default location for these files is under
# $exportFilePath/xslt.  If the file is not found there, the job will
# not work.
# If the text is internationalized, it is prefaced with an & (and)
##############################################################

##############################################################
# 2. XSL file export locations and messaging
#
# This can be in the format of a relative directory.
# The location, exportName, success, and failure parameters can use variable names. Allowed variables are:
#    $datasetId  the id of the dataset definition in the OpenClinica database
#    $datasetName  the name of the dataset, with space characters replaced by underscores
#    $date  the system date, in YYYYMMDD format
#    $dateTime  the system dateTime, in YYYYMMDDHHMMSS format
#    $exportFilePath  the standard location for file output, equal to $filePath/datasets , based on $filePath set in datainfo.properties
#    $linkURL  this will provide a URL to the user who ran the export that allows them to download the file.
#    $errorMsg  this will provide the actual system error message that caused the extract to fail
# Note: variables may be specified in the standard format, e.g. $date or with curly braces, e.g. ${date}
# Note: If you use the $dateTime variable in your file name and/or location, a new file will be generated each time the extract is run.
#          If you use a static file name, the file name will be the same each time and will overwrite the prior version of the file.
##############################################################

##############################################################
# 3. XSL file name templates
#
# File names for the export files.  This can be appended with
# a date ($date) or date-time ($dateTime).
# (This last one is important for files with multiple post
# processing actions.)
# Suffixes ARE NOT generated automatically (.sql, .pdf, etc)
##############################################################

# optional tag below, database properties
# if this is commented out, OpenClinica's default setting from datainfo.properties
# will be used instead
extract.1.odmType=full
extract.1.file=copyXML.xsl
extract.1.fileDescription=CDISC ODM XML 1.3 Full with OpenClinica extensions
extract.1.linkText=Run Now
extract.1.helpText=CDISC ODM XML 1.3 Full with OpenClinica extensions. Includes discrepancy notes and audit trails.
extract.1.location=$exportFilePath/$datasetName/ODM_1.3_Full
extract.1.exportname=odm1.3_full$datasetName_$dateTime.xml
#extract.1.zip=true
#extract.1.deleteOld=true
extract.1.success=The extract completed successfully. The file is available for download $linkURL.
#extract.1.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.2.odmType=clinical_data
extract.2.file=copyXML.xsl
extract.2.fileDescription=CDISC ODM XML 1.3 Clinical Data with OpenClinica extensions
extract.2.linkText=Run Now
extract.2.helpText=CDISC ODM XML 1.3 Clinical Data with OpenClinica extensions. Does not include discrepancy notes or audit trails.
extract.2.location=$exportFilePath/$datasetName/ODM_1.3_Extensions
extract.2.exportname=odm1.3_clinical_ext_$datasetName_$dateTime.xml
#extract.2.zip=true
#extract.2.deleteOld=true
extract.2.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.2.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.3.odmType=clinical_data
extract.3.file=odm1.3_to_1.3_no_extensions.xsl
extract.3.fileDescription=CDISC ODM XML 1.3 Clinical Data
extract.3.linkText=Run Now
extract.3.helpText=CDISC ODM XML 1.3 Clinical Data. Standard ODM with no vendor extensions and does not include discrepancy notes or audit trails.
extract.3.location=$exportFilePath/$datasetName/ODM_1.3_Clinical
extract.3.exportname=odm1.3_clinical_$datasetName_$dateTime.xml
#extract.3.zip=true
#extract.3.deleteOld=true
extract.3.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.3.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.4.odmType=clinical_data
extract.4.file=odm1.3_to_1.2_extensions.xsl
extract.4.fileDescription=CDISC ODM XML 1.2 Clinical Data with OpenClinica extensions
extract.4.linkText=Run Now
extract.4.helpText=CDISC ODM XML 1.2 Clinical Data with OpenClinica extensions. Does not include discrepancy notes or audit trails.
extract.4.location=$exportFilePath/$datasetName/ODM1.2_Extensions
extract.4.exportname=odm1.2_clinical_ext_$datasetName_$dateTime.xml
#extract.4.zip=true
#extract.4.deleteOld=true
extract.4.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.4.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.5.odmType=clinical_data
extract.5.file=odm1.3_to_1.2.xsl
extract.5.fileDescription=CDISC ODM XML 1.2 Clinical Data
extract.5.linkText=Run Now
extract.5.helpText=CDISC ODM XML 1.2 Clinical Data. Standard ODM with no vendor extensions and does not include discrepancy notes or audit trails..
extract.5.location=$exportFilePath/$datasetName/ODM1.2_Clinical
extract.5.exportname=odm1.2_clinical_$datasetName_$dateTime.xml
#extract.5.zip=true
#extract.5.deleteOld=true
extract.5.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.5.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.6.odmType=clinical_data
extract.6.file=odm_to_html.xsl
extract.6.fileDescription=View as HTML
extract.6.linkText=Run Now
extract.6.helpText=Generate a tabular view of your data as a HTML page.
extract.6.location=$exportFilePath/$datasetName/HTML
extract.6.exportname=HTML_$datasetName_$dateTime.html
#extract.6.zip=true
#extract.6.deleteOld=true
extract.6.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.6.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.7.odmType=clinical_data
extract.7.file=ODMToTAB.xsl
extract.7.fileDescription=Excel Spreadsheet
extract.7.linkText=Run Now
extract.7.helpText=Generate a tabular view of your data to be opened by Excel.
extract.7.location=$exportFilePath/$datasetName/EXCEL
extract.7.exportname=EXCEL_$datasetName_$dateTime.xls
#extract.7.zip=true
#extract.7.deleteOld=true
extract.7.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.7.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.8.odmType=clinical_data
extract.8.file=ODMToTAB.xsl
extract.8.fileDescription=Tab-delimited Text
extract.8.linkText=Run Now
extract.8.helpText=Generate a tabular view of your data in a tab-delimited output.
extract.8.location=$exportFilePath/$datasetName/TAB
extract.8.exportname=TAB_$datasetName_$dateTime.tsv
#extract.8.zip=true
#extract.8.deleteOld=true
extract.8.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.8.failure=The extract did not complete due to errors. Please contact your system administrator for details.


extract.9.odmType=clinical_data
extract.9.file=odm_spss_sps.xsl,odm_spss_dat.xsl
extract.9.fileDescription=SPSS Data and Syntax
extract.9.linkText=Run Now
extract.9.helpText=Generate SPSS style sheets
extract.9.location=$exportFilePath/$datasetName/SPSS
# If you customize the name of the .dat file, you will either have to:
# 1. change the related XLST stylesheet (odm_spss_sps.xsl) to generate correct reference to .dat file name
#   -or-
# 2. change it manually inside the .sps output file
extract.9.exportname=SPSS_SPS.sps,SPSS_DAT.dat
extract.9.zipName=SPSS_$datasetName_$dateTime.spss
#extract.9.zip=true
#extract.9.deleteOld=true
extract.9.success=Your extract job completed successfully. The file is available for download $linkURL.
#extract.9.failure=The extract did not complete due to errors. Please contact your system administrator for details.

extract.10.odmType=clinical_data
extract.10.file=xml_convert_sas_map.xsl,xml_convert_sas_data.xsl,xml_convert_sas_format.xsl
extract.10.fileDescription=SAS Data and Syntax
extract.10.linkText=Run Now
extract.10.helpText=Generate SAS Data and Scripts
extract.10.location=$exportFilePath/$datasetName/SAS
extract.10.exportname=SAS_MAP.xml,SAS_DATA.xml,SAS_FORMAT.sas
extract.10.zipName=SAS_$datasetName_$dateTime.sas
extract.10.zip=true
extract.10.deleteOld=true
extract.10.success=Your extract job completed successfully. The file is available for download $linkURL.
extract.10.failure=The extract did not complete due to errors. Please contact your system administrator for details.

##############################################################
# 4. Postprocessing Options
#
# Currently there are two codes, linked to the files listed above:
# sql = push to a db
# pdf = pdf generation
# Each XSL file can currently have one postprocessing option.
#
# You can define multiple postprocessors. Each postprocessor should be
# specified in the form:
# [[uniquePostprocessorName]].postProcessor =sql or pdf
# [[uniquePostprocessorName]].[[additionalProperties]] =

# Each extract format can currently have one postprocessing option, which should refer to the uniquePostprocessorName
# Example extract.1.post=db1

# postprocessor method
# a value is required for this field
##############################################################

##############################################################
# SQL Postprocessor Configurations
# Enter these properties if you require to run the sql script generated by XSL data transformation in a different database,
# not in the OpenClinica database.
# Leaving the properties blank implies that the SQL postprocessing will not take place.
# You may create more than one SQL database connections, use db1, db2, etc.

##############################################################

db1.username=
db1.password=
db1.url=jdbc:postgresql://localhost:5432/DATABASENAME

##############################################################
#  Apache FO (PDF) Postprocessor Configurations
##############################################################

pdf1.postProcessor=pdf
pdf1.location=$exportFilePath
pdf1.exportname=PDF_$datasetName_$dateTime.xml
pdf1.deleteOld=true
pdf1.zip=true
