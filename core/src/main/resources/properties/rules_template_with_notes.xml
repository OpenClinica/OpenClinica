<!-- This template contains comments about each of the elements contained 
	in this file. Created by: [[Your Name]] Date: [[Created date]] Case report 
	form: [[CRF Name]] Translated variables: [[Key to variables and/or reference 
	document]] -->


<!-- Each file should contain only 1 RuleImport -->
<RuleImport>
	<!-- Rule Assignment contains one target with one or more RuleRefs. This 
		is where you define the variable to which the Rule applies, when 
		the Rule should be executed, and the action(s) that should occur. -->
	<RuleAssignment>
		<!-- Rules are assigned to a particular data item in a CRF via the Target.
			This defines which variable will display any associated error message. 
			For DiscrepancyNoteAction or EmailAction, this is the variable that will 
			be associated with the Discrepancy Note or email. 
			For EventAction, ShowAction, HideAction, this is the variable that will 
			trigger the Rule. Within the Target, the Context should always be Context="OC_RULES_V1" -->
		<Target Context="OC_RULES_V1"></Target>
		<!-- OpenClinica can run rules automatically at any hour, on the hour. If 
			you include this parameter, the time must be entered in 24-hour format (00:00 to 23:59), 
			though OpenClinica will only run the Rule based on the hour value provided. 
			For example, if you specify 17:30, the Rule will run at 17:00. If the time is left blank, 
			the Rule will run at 20:00. Also, in the Run tag, you must set Batch="true".
			If you remove the parameter completely, the Rule will run based on the Run parameters only 
			and will not run on a schedule. -->
		<RunOnSchedule Time="17:00" />
		<!-- RuleRef is where you reference an existing Rule OID from the RuleDef section below. 
			This is how you define what Expression to apply to your Target and specify what action(s) 
			should take place based on whether that Expression evaluates to true or false. 
			The RuleRef OID can only contain capital letters, numbers, and underscores (no spaces). -->
		<RuleRef OID="">
			<!-- DiscrepancyNoteAction creates a Discrepancy Note automatically when the 
				RuleDef Expression evaluates to the result that you indicate here. You can 
				specify that the DiscrepancyNoteAction should occur based on the Expression 
				evaluating to either "true" or "false" -->
			<DiscrepancyNoteAction IfExpressionEvaluates="true">
			<!-- Run defines when the Rule Action should be executed. Specify this
				by indicating "true" or "false" for each given condition. -->
				<Run AdministrativeDataEntry="true" InitialDataEntry="true"	DoubleDataEntry="true" ImportDataEntry="false" Batch="true" />
				<!-- Message is the error message that the data entry person will see if the 
					DiscrepancyNoteAction is activated. This is also the message that is pre-populated 
					in the detailed notes of the resulting Discrepancy Note. -->
				<Message></Message>
			</DiscrepancyNoteAction>
			<!-- EmailAction sends an email automatically when the RuleDef expression evaluates 
				to the result that you indicate here. You can specify that the EmailAction should occur 
				based on the Expression evaluating to either "true" or "false".  -->
			<EmailAction IfExpressionEvaluates="true">
			<!-- Run defines when the Rule Action should be executed. Specify this
				by indicating "true" or "false" for each given condition. -->
				<Run AdministrativeDataEntry="true" InitialDataEntry="true"	DoubleDataEntry="true" ImportDataEntry="false" Batch="true" />
				<!-- Message is the error message that the data entry person will see if the 
					EmailAction is activated. This is also the message that gets pre-populated 
					in the email that gets sent. -->
				<Message></Message>
				<!-- The To tag allows you to specify an email account to receive the email when 
					the EmailAction is activated. To specify more than one email use comma separated values. 
					For example: usera@example.com,userb@example.com. -->
				<To></To>
			</EmailAction>
			<!-- InsertAction is used to insert a value into another item in the same 
				CRF or into another CRF in the same event definition. It can be a single provided value
				or the value of another field. Specify whether the action should occur based on the 
				RuleDef Expression evaluating to "true" or "false" -->
			<InsertAction IfExpressionEvaluates="true">
			<!-- Run defines when the Rule Action should be executed. Specify when the Rule should execute 
				by indicating "true" or "false" for each given condition. -->
				<Run AdministrativeDataEntry="true" InitialDataEntry="true"	DoubleDataEntry="true" ImportDataEntry="false" Batch="true" />
				<!-- DestinationProperty is the item that will get the value inserted 
					based on the rule expression. If it is part of the same group as the target, 
					you only need to provide the ITEM OID. If it is in a different group, but 
					the same CRF, you must provide the GROUP OID with the ITEM OID. If the item 
					is in a different CRF, you must provide the CRF OID, GROUP OID, and ITEM OID. 
					If you want to insert a static value into the specified DestinationProperty, specify 
					that value in the Value="" clause. If you want to insert the value of another item into 
					the specified DestinationProperty, remove the Value="" clause and use the ValueExpression 
					clause below instead. -->
				<DestinationProperty OID="" Value="">
				<!-- ValueExpression is used to copy a value from one item into the DestinationProperty Item. 
					If it is part of the same group as the Target, you only need to provide the 
					ITEM OID. If it is in a different Group, but the same CRF, you must provide 
					the GROUP OID with the ITEM OID. If the item is in a different CRF, you must 
					provide the CRF OID, GROUP OID, and ITEM OID. If you are inserting a static value
					into the DestinationProperty, use the Value="" clause above and delete the ValueExpression 
					clause.-->
				<ValueExpression Context="OC_RULES_V1"></ValueExpression>
				</DestinationProperty>
			</InsertAction>
			<!-- The NotificationAction is used to send an SMS and/or email notification to a Study Participant, 
				or an email notification to any specified email address. You can specify that the 
				NotificationAction should occur based on the Expression evaluating to either "true" or "false".-->
			<NotificationAction IfExpressionEvaluates="true">
				<!-- The To tag allows you to specify an email account or Participant to which the 
					notification will be sent. ${participant} can be used to send the notification to all
					contact means provided when the Participant was Connected to OpenClinica (email and/or SMS).
					You can specify more than one contact by using comma separated values. 
					For example: ${participant},user1@example.com,user2@example.com -->
				<To></To>
				<!-- Subject populates the Subject line of the email if an email is generated as part 
					of the NotificationAction. If only an SMS is generated, then this is optional/ignored. -->
				<Subject></Subject>
				<!-- Message is the body/content of the notification that will be delivered in the SMS and/or Email.
					The following parameters can be used in the message: ${participant.firstname}, ${participant.loginurl}, 
					${participate.url}, ${study.name}, ${participant.accessCode}, ${event.name}.-->
				<Message></Message>
			</NotificationAction>
			<!-- ShowAction displays an Item or Group automatically when the referenced 
				RuleDef Expression evaluates to the value you specify. The Item or Group to be 
				shown must be part of the same CRF as the Target. Specify whether the action should 
				occur based on the Expression evaluating to "true" or "false". ShowAction must be used in
				conjunction with a HideAction and they must both be part of the same RuleOID.-->
			<ShowAction IfExpressionEvaluates="true">
			<!-- Run defines when the Rule Action should be executed. Specify this
				by indicating "true" or "false" for each given condition. -->
				<Run AdministrativeDataEntry="true" InitialDataEntry="true"	DoubleDataEntry="true" ImportDataEntry="false" Batch="false" />
				<!-- Message is the (typically instructional) text that will be displayed during data entry if the shown 
					Item or Group is in the same section as the Target. The message is not displayed if the Item or Group  
					to be shown are in a different section of the CRF. -->
				<Message></Message>
				<!-- DestinationProperty is the OID of the Item or Group that will be shown when the action executes. -->
				<DestinationProperty OID="" />
			</ShowAction>
			<!-- HideAction automatically collapses or hides an Item or Group when the referenced 
				RuleDef expression evaluates to the value you specify. The Item or Group to be hidden 
				must be part of the same CRF as the Target and must not contain any data. Specify whether the action 
				should occur based on the Expression evaluating to "true" or "false". HideAction must be used in
				conjunction with a ShowAction and they must both be part of the same RuleOID. -->
			<HideAction IfExpressionEvaluates="true">
			<!-- Run defines when the Rule Action should be executed. Specify this
				by indicating "true" or "false" for each given condition. -->
				<Run AdministrativeDataEntry="true" InitialDataEntry="true" DoubleDataEntry="true" ImportDataEntry="false" Batch="false" />
				<!-- Message is the text that will be displayed during data entry if the hidden	Item or Group is in the 
					same section as the Target. The message is not displayed if the hidden Item or Group are in a 
					different section of the CRF. -->
				<Message></Message>
				<!-- DestinationProperty is the OID of the Item or Group that will be hidden when the action executes -->
				<DestinationProperty OID="" />
			</HideAction>
			<!-- EventAction is used to schedule an event automatically based on 
				the Status or StartDate of another Event. EventAction OID is the 
				OID of the Event to be updated. -->
			<EventAction IfExpressionEvaluates="true" OID="">
				<!-- RunOnStatus allows you to control whether the Event date of the future 
					event (or the event to be created or updated) should be updated or not based 
					on its current status. For example if Event 2 is "complete" and the user updates the 
					StartDate of Event 1, if RunOnStatus complete="false" then Event 2 will not be updated. 
					The system does not support automatic updates of Event StartDate for records with a 
					status of Signed or Locked. -->
				<RunOnStatus not_scheduled="true" scheduled="true" data_entry_started="false" completed="false" skipped="false" stopped="false" />
				<!-- EventDestination Property is the property of the Event that the Rule will update. 
					Currently, "STARTDATE" is the only property that can be updated. -->
				<EventDestination Property="STARTDATE">
					<!--ValueExpression is the value or the mathematical expression that will evaluate 
						to a resulting StartDate for the Event being scheduled. You can use Study Event Start 
						Date, a specific date in YYYY-MM-DD format, or _CURRENT_DATE and can use any of 
						these with + or - integer values. 
						For Example: <ValueExpression Context="OC_RULES_V1">SE_VISIT1 + 7</ValueExpression> -->
					<ValueExpression Context="OC_RULES_V1"></ValueExpression>
				</EventDestination>
			</EventAction>
		</RuleRef>
	</RuleAssignment>
	<!-- RuleDef is where you define your expression and Rule description. In the 
		RuleDef tag, there are two attributes that must be defined: OID and Name. 
		OID must be unique, all UPPERCASE, and cannot contain whitespace. Name should 
		be a brief description of what the Rule does; this is displayed in the Manage Rules
		page in OpenClinica; it is not visible during data entry. -->
	<RuleDef OID="" Name="">
		<!-- Description should be a detailed description of what the expression 
			is evaluating. This should be useful to anyone who might be 
			working with the XML files to help them better understand the context and 
			the expression. This is displayed in the Manage Rules page in OpenClinica;
			it is not visible during data entry. -->
		<Description></Description>
		<!-- The expression is the mathematical definition of what is being evaluated. Rules are 
			executed based on the Expression evaluating to "true" or "false" as indicated in the 
			Run tag for each Rule Action.-->
		<Expression></Expression>
	</RuleDef>
</RuleImport>