<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
    <changeSet author="jnyayapathi" id="2013-04-16-MR330-01" dbms="postgresql">
        <comment>View 'view_dn_item_data'.</comment>
        <!--  please note that this view under is again recreated, look for the definition under -->
        <sql splitStatements="true">
<![CDATA[
CREATE OR REPLACE VIEW view_dn_item_data AS 
 SELECT s.study_id, s.parent_study_id, ( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND event_definition_crf.study_id = s.study_id AND event_definition_crf.crf_id = c.crf_id AND (s.parent_study_id = 0 OR s.parent_study_id IS NULL)) AS study_hide_crf, ( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND event_definition_crf.study_id = s.study_id AND event_definition_crf.crf_id = c.crf_id AND (s.parent_study_id <> 0 OR s.parent_study_id IS NOT NULL)) AS site_hide_crf, dn.discrepancy_note_id, map.item_data_id AS entity_id, map.column_name, ss.study_subject_id, ss.label, ss.status_id AS ss_status_id, dn.discrepancy_note_type_id, dn.resolution_status_id, s.unique_identifier AS site_id, ds.date_created, ds.date_updated, ds.days, ds.age, sed.name AS event_name, se.date_start, c.name AS crf_name, ec.status_id, i.item_id, i.name AS entity_name, id.value, dn.entity_type, dn.description, dn.detailed_notes, ds.total_notes, ua.first_name, ua.last_name, ua.user_name, ua2.first_name AS owner_first_name, ua2.last_name AS owner_last_name, ua2.user_name AS owner_user_name
   FROM dn_item_data_map map
   JOIN discrepancy_note dn ON dn.discrepancy_note_id = map.discrepancy_note_id AND dn.entity_type::text = 'itemData'::text AND (dn.parent_dn_id IS NULL OR dn.parent_dn_id = 0)
   JOIN view_dn_stats ds ON dn.discrepancy_note_id = ds.discrepancy_note_id
   JOIN user_account ua2 ON dn.owner_id = ua2.user_id
   JOIN item_data id ON map.item_data_id = id.item_data_id
   JOIN item i ON id.item_id = i.item_id
   JOIN event_crf ec ON id.event_crf_id = ec.event_crf_id
   JOIN study_event se ON ec.study_event_id = se.study_event_id
   JOIN crf_version cv ON ec.crf_version_id = cv.crf_version_id
   JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
   JOIN crf c ON cv.crf_id = c.crf_id
   JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
   JOIN study s ON ss.study_id = s.study_id
   LEFT JOIN user_account ua ON dn.assigned_user_id = ua.user_id
  WHERE map.study_subject_id = ss.study_subject_id;

]]>
        </sql>
    </changeSet>
    
  <changeSet author="jnyayapathi" id="2013-04-16-MR330-01-ora" dbms="oracle">
        <comment>View 'view_dn_item_data'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_item_data as 
  select 
    s.study_id, 
    s.parent_study_id, 
    (select hide_crf  from event_definition_crf where study_event_definition_id = sed.study_event_definition_id and (study_id = s.study_id or study_id = s.parent_study_id) and crf_id = c.crf_id and (parent_id =0 or parent_id is null) ) as study_hide_crf,
   (select hide_crf from event_definition_crf where study_event_definition_id = sed.study_event_definition_id and study_id = s.study_id and crf_id = c.crf_id and (parent_id <> 0 or parent_id is not null) )  as site_hide_crf,
    dn.discrepancy_note_id, 
    map.item_data_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id,
    dn.resolution_status_id, 
    s.unique_identifier as site_id, 
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age, 
    sed.name as event_name, 
    se.date_start, 
    c.name as crf_name, 
    ec.status_id,
    i.item_id as item_id, 
    i.name as entity_name, 
    id.value, 
    dn.entity_type, 
    dn.description, 
    dn.detailed_notes, 
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from 
    dn_item_data_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'itemData'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2 on (dn.owner_id = ua2.user_id)
    join item_data id on (map.item_data_id = id.item_data_id)
    join item i on (id.item_id = i.item_id)
    join event_crf ec on (id.event_crf_id = ec.event_crf_id)
    join study_event se on (ec.study_event_id = se.study_event_id)
    join crf_version cv on (ec.crf_version_id = cv.crf_version_id)
    join study_event_definition sed on (se.study_event_definition_id = sed.study_event_definition_id)
    join crf c on (cv.crf_id = c.crf_id)
    join study_subject ss on (se.study_subject_id = ss.study_subject_id)
    join study s on (ss.study_id = s.study_id)
    left join user_account ua on (dn.assigned_user_id = ua.user_id)
]]>
        </sql>
    </changeSet>    
    
      <changeSet author="jnyayapathi" id="2013-04-16-MR330-03" dbms="postgresql">
        <comment>View 'view_dn_item_data'.</comment>
        <sql splitStatements="true">
<![CDATA[
CREATE OR REPLACE VIEW view_dn_item_data AS 
 SELECT s.study_id, s.parent_study_id, ( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND (event_definition_crf.study_id = s.study_id or event_definition_crf.study_id = s.parent_study_id )
          AND event_definition_crf.crf_id = c.crf_id AND (event_definition_crf.parent_id = 0 OR event_definition_crf.parent_id IS NULL)) AS study_hide_crf, ( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND event_definition_crf.study_id = s.study_id AND event_definition_crf.crf_id = c.crf_id AND (event_definition_crf.parent_id <> 0 OR event_definition_crf.parent_id IS NOT NULL)) AS site_hide_crf,
           dn.discrepancy_note_id, map.item_data_id AS entity_id, map.column_name, ss.study_subject_id, ss.label, ss.status_id AS ss_status_id, dn.discrepancy_note_type_id, dn.resolution_status_id, s.unique_identifier AS site_id, ds.date_created, ds.date_updated, ds.days, ds.age, sed.name AS event_name, se.date_start, c.name AS crf_name, ec.status_id, i.item_id, i.name AS entity_name, id.value, dn.entity_type, dn.description, dn.detailed_notes, ds.total_notes, ua.first_name, ua.last_name, ua.user_name, ua2.first_name AS owner_first_name, ua2.last_name AS owner_last_name, ua2.user_name AS owner_user_name
   FROM dn_item_data_map map
   JOIN discrepancy_note dn ON dn.discrepancy_note_id = map.discrepancy_note_id AND dn.entity_type::text = 'itemData'::text AND (dn.parent_dn_id IS NULL OR dn.parent_dn_id = 0)
   JOIN view_dn_stats ds ON dn.discrepancy_note_id = ds.discrepancy_note_id
   JOIN user_account ua2 ON dn.owner_id = ua2.user_id
   JOIN item_data id ON map.item_data_id = id.item_data_id
   JOIN item i ON id.item_id = i.item_id
   JOIN event_crf ec ON id.event_crf_id = ec.event_crf_id
   JOIN study_event se ON ec.study_event_id = se.study_event_id
   JOIN crf_version cv ON ec.crf_version_id = cv.crf_version_id
   JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
   JOIN crf c ON cv.crf_id = c.crf_id
   JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
   JOIN study s ON ss.study_id = s.study_id
   LEFT JOIN user_account ua ON dn.assigned_user_id = ua.user_id
  WHERE map.study_subject_id = ss.study_subject_id;

]]>
        </sql>
    </changeSet>
    
    
     <changeSet author="jnyayapathi" id="2013-04-16-MR330-04" dbms="postgresql">
        <comment>View 'view_dn_event_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
 CREATE OR REPLACE VIEW view_dn_event_crf AS 
 SELECT s.study_id, s.parent_study_id,( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND (event_definition_crf.study_id = s.study_id or event_definition_crf.study_id = s.parent_study_id )
          AND event_definition_crf.crf_id = c.crf_id AND (event_definition_crf.parent_id = 0 OR event_definition_crf.parent_id IS NULL)) AS study_hide_crf, ( SELECT event_definition_crf.hide_crf
           FROM event_definition_crf
          WHERE event_definition_crf.study_event_definition_id = sed.study_event_definition_id AND event_definition_crf.study_id = s.study_id AND event_definition_crf.crf_id = c.crf_id AND (event_definition_crf.parent_id <> 0 OR event_definition_crf.parent_id IS NOT NULL)) AS site_hide_crf
, dn.discrepancy_note_id, map.event_crf_id AS entity_id, map.column_name, ss.study_subject_id, ss.label, ss.status_id AS ss_status_id, dn.discrepancy_note_type_id, dn.resolution_status_id, s.unique_identifier AS site_id, ds.date_created, ds.date_updated, ds.days, ds.age, sed.name AS event_name, se.date_start, c.name AS crf_name, ec.status_id, NULL::integer AS item_id, map.column_name AS entity_name, 
        CASE
            WHEN map.column_name::text = 'date_interviewed'::text THEN to_char(ec.date_interviewed::timestamp with time zone, 'YYYY-MM-DD'::text)
            WHEN map.column_name::text = 'interviewer_name'::text THEN ec.interviewer_name::text
            ELSE btrim(''::text)
        END AS value, dn.entity_type, dn.description, dn.detailed_notes, ds.total_notes, ua.first_name, ua.last_name, ua.user_name, ua2.first_name AS owner_first_name, ua2.last_name AS owner_last_name, ua2.user_name AS owner_user_name
   FROM dn_event_crf_map map
   JOIN discrepancy_note dn ON dn.discrepancy_note_id = map.discrepancy_note_id AND dn.entity_type::text = 'eventCrf'::text AND (dn.parent_dn_id IS NULL OR dn.parent_dn_id = 0)
   JOIN view_dn_stats ds ON dn.discrepancy_note_id = ds.discrepancy_note_id
   JOIN user_account ua2 ON dn.owner_id = ua2.user_id
   JOIN event_crf ec ON map.event_crf_id = ec.event_crf_id
   JOIN study_event se ON ec.study_event_id = se.study_event_id
   JOIN crf_version cv ON ec.crf_version_id = cv.crf_version_id
    JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
   JOIN crf c ON cv.crf_id = c.crf_id
   JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
   JOIN study s ON ss.study_id = s.study_id
   LEFT JOIN user_account ua ON dn.assigned_user_id = ua.user_id;

]]>
        </sql>
    </changeSet>
    
       <changeSet author="jnyayapathi" id="2013-04-16-MR330-03-ora" dbms="oracle">
        <comment>View 'view_dn_event_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_event_crf as 
  select 
    s.study_id, 
    s.parent_study_id, 
    (select hide_crf  from event_definition_crf where study_event_definition_id = sed.study_event_definition_id and (study_id = s.study_id or study_id = s.parent_study_id) and crf_id = c.crf_id and (parent_id =0 or parent_id is null) ) as study_hide_crf,
   (select hide_crf from event_definition_crf where study_event_definition_id = sed.study_event_definition_id and study_id = s.study_id and crf_id = c.crf_id and (parent_id <> 0 or parent_id is not null) )  as site_hide_crf,
   dn.discrepancy_note_id, 
    map.event_crf_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id,
    dn.resolution_status_id, 
    s.unique_identifier as site_id, 
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age, 
    sed.name as event_name, 
    se.date_start, 
    c.name as crf_name, 
    ec.status_id, 
    null as item_id,
    map.column_name as entity_name, 
    case 
        when map.column_name = 'date_interviewed' then to_char(ec.date_interviewed, 'YYYY-MM-DD')
        when map.column_name = 'interviewer_name' then ec.interviewer_name
        else ''
    end as value, 
    dn.entity_type, 
    dn.description, 
    dn.detailed_notes, 
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from
    dn_event_crf_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id
      and dn.entity_type = 'eventCrf'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds
      on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2
      on (dn.owner_id = ua2.user_id)
    join event_crf ec
      on (map.event_crf_id = ec.event_crf_id)
    join study_event se
      on (ec.study_event_id = se.study_event_id)
    join crf_version cv
      on (ec.crf_version_id = cv.crf_version_id)
    join study_event_definition sed
      on (se.study_event_definition_id = sed.study_event_definition_id)
    join crf c
      on (cv.crf_id = c.crf_id)
    join study_subject ss
      on (se.study_subject_id = ss.study_subject_id)
    join study s
      on (ss.study_id = s.study_id)
    left join user_account ua
      on (dn.assigned_user_id = ua.user_id)

]]>
        </sql>
    </changeSet>
    </databaseChangeLog>