<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

     <!-- 
     ==================================================
     ==========        POSTGRES VIEWS        ==========
     ==================================================
      -->

     <changeSet author="drodrigues" id="2012-08-29-14122-01" dbms="postgresql">
        <comment>View 'view_dn_stats'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view "view_dn_stats" as select 
dn.discrepancy_note_id, 
case
    when dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3 then (current_date - totals.date_updated)
    else null
end as "days",
case 
    when dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3 then (current_date - dn.date_created)
    when dn.resolution_status_id = 4 then (totals.date_updated - dn.date_created)
    else null
end as "age",
totals.total_notes,
dn.date_created,
totals.date_updated
from discrepancy_note dn,
(
    select dn1.parent_dn_id, max(dn1.date_created) as "date_updated", count(dn1.discrepancy_note_id) as "total_notes" from discrepancy_note dn1 group by dn1.parent_dn_id
) as "totals"
where 
(dn.parent_dn_id is null or dn.parent_dn_id = 0)
and dn.discrepancy_note_id = totals.parent_dn_id;
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-02" dbms="postgresql">
        <comment>View 'view_study_hidden_event_definition_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_study_hidden_event_definition_crf as
SELECT edc.event_definition_crf_id, edc.hide_crf, edc.study_id, se.study_event_id, cv.crf_version_id
from
event_definition_crf edc
join study_event se on (edc.study_event_definition_id = se.study_event_definition_id and edc.parent_id is null)
join crf_version cv on (edc.crf_id = cv.crf_id)
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-03" dbms="postgresql">
        <comment>View 'view_site_hidden_event_definition_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_site_hidden_event_definition_crf as
select edc.event_definition_crf_id, edc.hide_crf, edc.study_id, se.study_event_id, cv.crf_version_id
from
event_definition_crf edc
join study_event se on (edc.study_event_definition_id = se.study_event_definition_id and edc.event_definition_crf_id not in (select parent_id from event_definition_crf where parent_id is not null or parent_id <> 0))
join crf_version cv on (edc.crf_id = cv.crf_id)
]]>
        </sql>
    </changeSet>


     <changeSet author="drodrigues" id="2012-08-29-14122-04" dbms="postgresql">
        <comment>View 'view_dn_item_data'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_item_data as select 
s.study_id, 
s.parent_study_id, 
vstudy.hide_crf as "study_hide_crf",
vsite.hide_crf as "site_hide_crf",
dn.discrepancy_note_id, 
map.item_data_id as "entity_id",
map.column_name,
ss.study_subject_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id,
dn.resolution_status_id, 
s.unique_identifier as "site_id", 
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
sed.name as "event_name", 
se.date_start, 
c.name as "crf_name", 
ec.status_id, 
i.item_id as "item_id",
i.name as "entity_name", 
id.value, 
dn.entity_type, 
dn.description, 
dn.detailed_notes, 
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from 
dn_item_data_map map
join discrepancy_note dn on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'itemData' and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
join user_account ua2 on (dn.owner_id = ua2.user_id)
join item_data id on (map.item_data_id = id.item_data_id)
join item i on (id.item_id = i.item_id)
join event_crf ec on (id.event_crf_id = ec.event_crf_id)
join study_event se on (ec.study_event_id = se.study_event_id)
join crf_version cv on (ec.crf_version_id = cv.crf_version_id)
join view_site_hidden_event_definition_crf vsite on (vsite.study_event_id = se.study_event_id and vsite.crf_version_id = cv.crf_version_id)
join view_study_hidden_event_definition_crf vstudy on (vstudy.study_event_id = se.study_event_id and vstudy.crf_version_id = cv.crf_version_id)
join study_event_definition sed on (se.study_event_definition_id = sed.study_event_definition_id)
join crf c on (cv.crf_id = c.crf_id)
join study_subject ss on (se.study_subject_id = ss.study_subject_id)
join study s on (ss.study_id = s.study_id)
left join user_account ua on (dn.assigned_user_id = ua.user_id);
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-05" dbms="postgresql">
        <comment>View 'view_dn_event_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_event_crf as 
select 
s.study_id, 
s.parent_study_id, 
vstudy.hide_crf as "study_hide_crf", 
vsite.hide_crf as "site_hide_crf",
dn.discrepancy_note_id, 
map.event_crf_id as "entity_id",
map.column_name,
ss.study_subject_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id,
dn.resolution_status_id, 
s.unique_identifier as "site_id", 
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
sed.name as "event_name", 
se.date_start, 
c.name as "crf_name", 
ec.status_id, 
null::integer as "item_id",
map.column_name as "entity_name",
case
    when map.column_name = 'date_interviewed' then to_char(ec.date_interviewed, 'YYYY-MM-DD')
    when map.column_name = 'interviewer_name' then ec.interviewer_name
    else TRIM('')
end as "value", 
dn.entity_type, 
dn.description, 
dn.detailed_notes, 
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
dn_event_crf_map map
join discrepancy_note dn on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'eventCrf' and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
join user_account ua2 on (dn.owner_id = ua2.user_id)
join event_crf ec on (map.event_crf_id = ec.event_crf_id)
join study_event se on (ec.study_event_id = se.study_event_id)
join crf_version cv on (ec.crf_version_id = cv.crf_version_id)
join view_site_hidden_event_definition_crf vsite on (vsite.study_event_id = se.study_event_id and vsite.crf_version_id = cv.crf_version_id)
join view_study_hidden_event_definition_crf vstudy on (vstudy.study_event_id = se.study_event_id and vstudy.crf_version_id = cv.crf_version_id)
join study_event_definition sed on (se.study_event_definition_id = sed.study_event_definition_id)
join crf c on (cv.crf_id = c.crf_id)
join study_subject ss on (se.study_subject_id = ss.study_subject_id)
join study s on (ss.study_id = s.study_id)
left join user_account ua on (dn.assigned_user_id = ua.user_id);
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-06" dbms="postgresql">
        <comment>View 'view_dn_study_event'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_study_event as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id, 
map.study_event_id as "entity_id",
map.column_name,
ss.study_subject_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age,
sed.name as "event_name", 
se.date_start,
TRIM('') as "crf_name",
0 as "status_id",
null::integer as "item_id",
map.column_name as "entity_name",
case
    when map.column_name = 'start_date' then to_char(se.date_start, 'YYYY-MM-DD')
    when map.column_name = 'end_date' then to_char(se.date_end, 'YYYY-MM-DD')
    when map.column_name = 'location' then se.location
    else TRIM('')
end as "value", 
dn.entity_type,
dn.description,
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
dn_study_event_map map
join discrepancy_note dn on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'studyEvent' and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
join user_account ua2 on (dn.owner_id = ua2.user_id)
join study_event se on (map.study_event_id = se.study_event_id)
join study_subject ss on (se.study_subject_id = ss.study_subject_id)
join study s on (ss.study_id = s.study_id)
join study_event_definition sed on (se.study_event_definition_id = sed.study_event_definition_id)
left join user_account ua on (dn.assigned_user_id = ua.user_id)
;

]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-07" dbms="postgresql">
        <comment>View 'view_dn_study_subject'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_study_subject as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id, 
map.study_subject_id as "entity_id",
map.column_name,
ss.study_subject_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
TRIM('') as "event_name", 
null::date as "date_start",
TRIM('') as "crf_name",
0 as "status_id", 
null::integer as "item_id",
map.column_name as "entity_name", 
to_char(ss.enrollment_date, 'YYYY-MM-DD') as "value", 
dn.entity_type,
dn.description, 
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from 
dn_study_subject_map map
join discrepancy_note dn on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'studySub' and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
join user_account ua2 on (dn.owner_id = ua2.user_id)
join study_subject ss on (map.study_subject_id = ss.study_subject_id)
join study s on (ss.study_id = s.study_id)
left join user_account ua on (dn.assigned_user_id = ua.user_id)
;

]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-08" dbms="postgresql">
        <comment>View 'view_dn_subject'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_subject as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id,
map.subject_id as "entity_id",
map.column_name,
ss.study_subject_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
TRIM('') as "event_name", 
null::date as "date_start",
TRIM('') as "crf_name", 
0 as "status_id", 
null::integer as "item_id",
map.column_name as "entity_name",
case
    when map.column_name = 'unique_identifier' then su.unique_identifier
    when map.column_name = 'gender' then su.gender
    when map.column_name = 'date_of_birth' then to_char(su.date_of_birth, 'YYYY-MM-DD')
    else TRIM('')
end as "value", 
dn.entity_type,
dn.description,
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
dn_subject_map map
join discrepancy_note dn on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'subject' and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
join user_account ua2 on (dn.owner_id = ua2.user_id)
join subject su on (map.subject_id = su.subject_id)
join study_subject ss on (su.subject_id = ss.subject_id)
join study s on (ss.study_id = s.study_id)
left join user_account ua on (dn.assigned_user_id = ua.user_id);
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-09" dbms="postgresql">
        <comment>View 'view_discrepancy_note'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_discrepancy_note as 
select * from view_dn_item_data
union all
select * from view_dn_event_crf
union all
select * from view_dn_study_event
union all
select * from view_dn_study_subject
union all
select * from view_dn_subject;
]]>
        </sql>
     </changeSet>
     
     <changeSet author="drodrigues" id="2012-08-29-14122-10" dbms="postgresql" failOnError="false">
        <comment>Indexes for the tables used in the view_discrepancy_notes query.</comment>
        <sql splitStatements="true">
<![CDATA[
create index discrepancy_note_idx_entity_type on discrepancy_note(entity_type);
create index discrepancy_note_idx_parent on discrepancy_note(discrepancy_note_id) where ((parent_dn_id is null) or (parent_dn_id = 0));
create index study_subject_idx_study on study_subject(study_id);
create index event_definition_crf_idx_study_event_definition on event_definition_crf(study_event_definition_id);
create index study_event_idx_study_event_definition on study_event(study_event_definition_id);
create index event_definition_crf_idx_crf on event_definition_crf(crf_id);
create index crf_version_idx_crf on crf_version(crf_id);
create index event_definition_crf_idx_parent_null on event_definition_crf(parent_id) where (parent_id is null);
create index event_definition_crf_idx_parent_zero on event_definition_crf(parent_id) where (parent_id is not null or parent_id <> 0);
]]>
        </sql>
    </changeSet>
     
     
     
     <!-- 
     ==================================================
     ==========         ORACLE VIEWS         ==========
     ==================================================
      -->

  <changeSet author="leonelag" id="2012-08-29-14122-01-ora" dbms="oracle">
    <comment>View 'view_dn_stats'.</comment>
    <sql splitStatements="true">
  <![CDATA[
  create or replace view view_dn_stats as
    select dn.discrepancy_note_id, 
      current_date - (
          select dn2.date_created
          from discrepancy_note dn2
          where dn2.parent_dn_id = dn.discrepancy_note_id
          and dn2.discrepancy_note_id = (
              select max(discrepancy_note_id) 
                from discrepancy_note dn3
                where
                  dn3.parent_dn_id = dn.discrepancy_note_id 
                  AND dn.resolution_status_id != 4
                  AND dn.resolution_status_id != 5   
          )
      ) as days, (
          select max(dn2.discrepancy_note_id)
            from discrepancy_note dn2
            where dn2.parent_dn_id = dn.discrepancy_note_id
      ) as age,
      j.total_notes,
      j.date_created,
      j.date_updated
    from discrepancy_note dn, (
          select
            dn2.parent_dn_id,
            count(dn2.discrepancy_note_id) as total_notes, 
            min(dn2.date_created) as date_created,
            max(dn2.date_created) as date_updated 
          from discrepancy_note dn2 
          group by dn2.parent_dn_id 
          having (dn2.parent_dn_id is not null and dn2.parent_dn_id <> 0)
      ) j
    where
      dn.parent_dn_id is null
      and dn.discrepancy_note_id = j.parent_dn_id
    ]]>
    </sql>
  </changeSet>


  <changeSet author="leonelag" id="2012-08-29-14122-02-ora" dbms="oracle">
    <comment>View 'view_study_hidden_evt_def_crf'.</comment>
    <sql splitStatements="true" >
    <![CDATA[
create or replace view view_study_hidden_evt_def_crf as
  SELECT edc.event_definition_crf_id, edc.hide_crf, edc.study_id, se.study_event_id, cv.crf_version_id
  from event_definition_crf edc
  join study_event se
    on (edc.study_event_definition_id = se.study_event_definition_id
    and edc.parent_id is null)
  join crf_version cv
    on (edc.crf_id = cv.crf_id)
      ]]>
    </sql>
  </changeSet>

  <changeSet author="leonelag" id="2012-08-29-14122-03-ora" dbms="oracle">
    <comment>View 'view_site_hidden_evt_def_crf'.</comment>
    <sql splitStatements="true" >
    <![CDATA[
create or replace view view_site_hidden_evt_def_crf as
  select edc.event_definition_crf_id, edc.hide_crf, edc.study_id, se.study_event_id, cv.crf_version_id
  from
  event_definition_crf edc
  join study_event se
    on (edc.study_event_definition_id = se.study_event_definition_id
    and edc.event_definition_crf_id not in (
      select parent_id from event_definition_crf where parent_id is not null or parent_id <> 0)
    )
  join crf_version cv
    on (edc.crf_id = cv.crf_id)
      ]]>
    </sql>
  </changeSet>


     <changeSet author="drodrigues" id="2012-08-29-14122-04-ora" dbms="oracle">
        <comment>View 'view_dn_item_data'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_item_data as 
  select 
    s.study_id, 
    s.parent_study_id, 
    vstudy.hide_crf as study_hide_crf,
    vsite.hide_crf as site_hide_crf,
    dn.discrepancy_note_id, 
    map.item_data_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id,
    dn.resolution_status_id, 
    s.unique_identifier as site_id, 
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age, 
    sed.name as event_name, 
    se.date_start, 
    c.name as crf_name, 
    ec.status_id,
    i.item_id as item_id, 
    i.name as entity_name, 
    id.value, 
    dn.entity_type, 
    dn.description, 
    dn.detailed_notes, 
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from 
    dn_item_data_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id and dn.entity_type = 'itemData'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2 on (dn.owner_id = ua2.user_id)
    join item_data id on (map.item_data_id = id.item_data_id)
    join item i on (id.item_id = i.item_id)
    join event_crf ec on (id.event_crf_id = ec.event_crf_id)
    join study_event se on (ec.study_event_id = se.study_event_id)
    join crf_version cv on (ec.crf_version_id = cv.crf_version_id)
    join view_site_hidden_evt_def_crf vsite on (vsite.study_event_id = se.study_event_id and vsite.crf_version_id = cv.crf_version_id)
    join view_study_hidden_evt_def_crf vstudy on (vstudy.study_event_id = se.study_event_id and vstudy.crf_version_id = cv.crf_version_id)
    join study_event_definition sed on (se.study_event_definition_id = sed.study_event_definition_id)
    join crf c on (cv.crf_id = c.crf_id)
    join study_subject ss on (se.study_subject_id = ss.study_subject_id)
    join study s on (ss.study_id = s.study_id)
    left join user_account ua on (dn.assigned_user_id = ua.user_id)
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-05-ora" dbms="oracle">
        <comment>View 'view_dn_event_crf'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_event_crf as 
  select 
    s.study_id, 
    s.parent_study_id, 
    vstudy.hide_crf as study_hide_crf, 
    vsite.hide_crf as site_hide_crf,
    dn.discrepancy_note_id, 
    map.event_crf_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id,
    dn.resolution_status_id, 
    s.unique_identifier as site_id, 
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age, 
    sed.name as event_name, 
    se.date_start, 
    c.name as crf_name, 
    ec.status_id, 
    null as item_id,
    map.column_name as entity_name, 
    case 
        when map.column_name = 'date_interviewed' then to_char(ec.date_interviewed, 'YYYY-MM-DD')
        when map.column_name = 'interviewer_name' then ec.interviewer_name
        else ''
    end as value, 
    dn.entity_type, 
    dn.description, 
    dn.detailed_notes, 
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from
    dn_event_crf_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id
      and dn.entity_type = 'eventCrf'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds
      on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2
      on (dn.owner_id = ua2.user_id)
    join event_crf ec
      on (map.event_crf_id = ec.event_crf_id)
    join study_event se
      on (ec.study_event_id = se.study_event_id)
    join crf_version cv
      on (ec.crf_version_id = cv.crf_version_id)
    join view_site_hidden_evt_def_crf vsite
      on (vsite.study_event_id = se.study_event_id and vsite.crf_version_id = cv.crf_version_id)
    join view_study_hidden_evt_def_crf vstudy
      on (vstudy.study_event_id = se.study_event_id
      and vstudy.crf_version_id = cv.crf_version_id)
    join study_event_definition sed
      on (se.study_event_definition_id = sed.study_event_definition_id)
    join crf c
      on (cv.crf_id = c.crf_id)
    join study_subject ss
      on (se.study_subject_id = ss.study_subject_id)
    join study s
      on (ss.study_id = s.study_id)
    left join user_account ua
      on (dn.assigned_user_id = ua.user_id)

]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-06-ora" dbms="oracle">
        <comment>View 'view_dn_study_event'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_study_event as 
  select 
    s.study_id, 
    s.parent_study_id, 
    0 as study_hide_crf, 
    0 as site_hide_crf,
    dn.discrepancy_note_id, 
    map.study_event_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id, 
    dn.resolution_status_id, 
    s.unique_identifier as site_id,
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age,
    sed.name as event_name, 
    se.date_start,
    '' as crf_name,
    0 as status_id,
    null as item_id,
    map.column_name as entity_name, 
    case 
        when map.column_name = 'start_date' then to_char(se.date_start , 'YYYY-MM-DD')
        when map.column_name = 'end_date' then to_char(se.date_end , 'YYYY-MM-DD')
        when map.column_name = 'location' then se.location
        else ''
    end as value, 
    dn.entity_type,
    dn.description,
    dn.detailed_notes,
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from
    dn_study_event_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id
      and dn.entity_type = 'studyEvent'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds
      on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2
      on (dn.owner_id = ua2.user_id)
    join study_event se
      on (map.study_event_id = se.study_event_id)
    join study_subject ss
      on (se.study_subject_id = ss.study_subject_id)
    join study s
      on (ss.study_id = s.study_id)
    join study_event_definition sed
      on (se.study_event_definition_id = sed.study_event_definition_id)
    left join user_account ua
      on (dn.assigned_user_id = ua.user_id)
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-07-ora" dbms="oracle">
        <comment>View 'view_dn_study_subject'.</comment>
        <sql splitStatements="true">
<![CDATA[
  create or replace view view_dn_study_subject as 
    select 
      s.study_id, 
      s.parent_study_id, 
      0 as study_hide_crf, 
      0 as site_hide_crf,
      dn.discrepancy_note_id, 
      map.study_subject_id as entity_id,
      map.column_name,
      ss.study_subject_id,
      ss.label, 
      ss.status_id as ss_status_id,
      dn.discrepancy_note_type_id, 
      dn.resolution_status_id, 
      s.unique_identifier as site_id,
      ds.date_created,
      ds.date_updated,
      ds.days, 
      ds.age, 
      '' as event_name, 
      null as date_start,
      '' as crf_name,
      0 as status_id,
      null as item_id, 
      map.column_name as entity_name, 
      to_char(ss.enrollment_date, 'YYYY-MM-DD') as value, 
      dn.entity_type,
      dn.description, 
      dn.detailed_notes,
      ds.total_notes,
      ua.first_name, 
      ua.last_name, 
      ua.user_name,
      ua2.first_name as owner_first_name, 
      ua2.last_name as owner_last_name, 
      ua2.user_name as owner_user_name
    from 
      dn_study_subject_map map
      join discrepancy_note dn
        on (dn.discrepancy_note_id = map.discrepancy_note_id
        and dn.entity_type = 'studySub'
        and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
      join view_dn_stats ds
        on (dn.discrepancy_note_id = ds.discrepancy_note_id)
      join user_account ua2
        on (dn.owner_id = ua2.user_id)
      join study_subject ss
        on (map.study_subject_id = ss.study_subject_id)
      join study s
        on (ss.study_id = s.study_id)
      left join user_account ua
       on (dn.assigned_user_id = ua.user_id)
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-08-ora" dbms="oracle">
        <comment>View 'view_dn_subject'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_dn_subject as 
  select 
    s.study_id, 
    s.parent_study_id, 
    0 as study_hide_crf, 
    0 as site_hide_crf,
    dn.discrepancy_note_id,
    map.subject_id as entity_id,
    map.column_name,
    ss.study_subject_id,
    ss.label, 
    ss.status_id as ss_status_id,
    dn.discrepancy_note_type_id, 
    dn.resolution_status_id, 
    s.unique_identifier as site_id,
    ds.date_created,
    ds.date_updated,
    ds.days, 
    ds.age, 
    '' as event_name, 
    null as date_start,
    '' as crf_name, 
    0 as status_id, 
    null as item_id,
    map.column_name as entity_name, 
    case
        when map.column_name = 'unique_identifier' then su.unique_identifier
        when map.column_name = 'gender' then su.gender
        when map.column_name = 'date_of_birth' then to_char(su.date_of_birth , 'YYYY-MM-DD')
        else ''    
    end as value, 
    dn.entity_type,
    dn.description,
    dn.detailed_notes,
    ds.total_notes,
    ua.first_name, 
    ua.last_name, 
    ua.user_name,
    ua2.first_name as owner_first_name, 
    ua2.last_name as owner_last_name, 
    ua2.user_name as owner_user_name
  from
    dn_subject_map map
    join discrepancy_note dn
      on (dn.discrepancy_note_id = map.discrepancy_note_id
      and dn.entity_type = 'subject'
      and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0)))
    join view_dn_stats ds
      on (dn.discrepancy_note_id = ds.discrepancy_note_id)
    join user_account ua2
      on (dn.owner_id = ua2.user_id)
    join subject su
      on (map.subject_id = su.subject_id)
    join study_subject ss
      on (su.subject_id = ss.subject_id)
    join study s
      on (ss.study_id = s.study_id)
    left join user_account ua
      on (dn.assigned_user_id = ua.user_id)
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-08-29-14122-09-ora" dbms="oracle">
        <comment>View 'view_discrepancy_note'.</comment>
        <sql splitStatements="true">
<![CDATA[
create or replace view view_discrepancy_note as 
select * from view_dn_item_data
union all
select * from view_dn_event_crf
union all
select * from view_dn_study_event
union all
select * from view_dn_study_subject
union all
select * from view_dn_subject;
]]>
        </sql>
     </changeSet>
     
     <!-- 
     ==================================================
     ==========        SHARED QUERIES        ==========
     ==================================================
      -->
     

     <changeSet author="drodrigues" id="2012-08-29-14122-10-shared">
        <comment>Updating wrong entity names in study event mapping</comment>
        <sql splitStatements="true">
<![CDATA[
update dn_study_event_map set column_name = 'start_date' where column_name = 'date_start';
update dn_study_event_map set column_name = 'end_date' where column_name = 'date_end';
]]>
        </sql>
     </changeSet>

</databaseChangeLog>