<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

	    <changeSet author="sshamim" id="2009-03-03-4768-1" dbms="postgresql">
	    <comment>create or replace event_definition_crf_trigger</comment>
    	<sql splitStatements="false">
            CREATE OR REPLACE FUNCTION event_definition_crf_trigger() RETURNS "trigger"
            AS 'DECLARE
            pk INTEGER;
            se_id INTEGER;
            cv_id INTEGER;
            entity_name_value TEXT;
            BEGIN
                IF (TG_OP = ''UPDATE'') THEN
                    IF(OLD.status_id <![CDATA[<>]]> NEW.status_id) THEN
                        /*---------------*/
                        /*Event CRF status changed*/
                        SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                        SELECT INTO entity_name_value ''Status'';
                        IF(NEW.status_id = ''5'') THEN
                            SELECT INTO se_id se.study_event_id FROM study_event se WHERE se.study_event_definition_id = NEW.study_event_definition_id;
                            SELECT INTO cv_id ec.crf_version_id FROM event_crf ec, study_event se WHERE se.study_event_definition_id = NEW.study_event_definition_id and ec.study_event_id = se.study_event_id;

                            INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, study_event_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id, event_crf_version_id)
                                        VALUES (pk, ''13'',se_id, now(), NEW.update_id, ''event_definition_crf'', NEW.event_definition_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_definition_crf_id, cv_id);
                        END IF;
                    END IF;
                    RETURN NULL;  /*return values ignored for ''after'' triggers*/
                END IF;
            END;
        '
            LANGUAGE plpgsql;
    	</sql>
    </changeSet>
    <changeSet author="sshamim" id="2009-03-03-4768-2">
    	<preConditions onFail="MARK_RAN">
	 	<dbms type="postgresql" />
	</preConditions>
    	 <sql splitStatements="false">
    	 	CREATE TRIGGER event_definition_crf_update
		    AFTER UPDATE ON event_definition_crf
		    FOR EACH ROW
		    EXECUTE PROCEDURE event_definition_crf_trigger();
    	 </sql>
    </changeSet>
</databaseChangeLog>