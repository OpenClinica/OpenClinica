<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
    <changeSet author="kkrumlian" id="2009-04-02-3397-1">
        <comment>Create a table named audit_user_login</comment>
        <createTable tableName="audit_user_login">
            <column autoIncrement="true" name="id" type="int">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="user_name" type="VARCHAR(255)"/>
            <column name="user_account_id" type="INT"/>
            <column name="login_attempt_date" type="java.sql.Types.TIMESTAMP"/>
            <column name="login_status_code" type="INT"/>
            <column name="version" type="INT"/>
        </createTable>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-2" dbms="oracle">
        <comment>Create a sequence/trigger to imitate autoIncrement functionality for oracle</comment>
        <comment>trigger name, table name, sequence name Will need to be changed for each table.</comment>
        <createSequence sequenceName="AUDIT_USER_LOGIN_ID_SEQ"/>
        <sql splitStatements="false"> 
            create or replace trigger audit_user_login_bef_trg 
                before insert on audit_user_login
                    for each row begin 
                        if :new.id is null 
                         then select AUDIT_USER_LOGIN_ID_SEQ.nextval into :new.id from dual; 
                        end if; 
                    end; 
        </sql>
        <rollback>
            drop trigger audit_user_login_bef_trg;
            drop sequence AUDIT_USER_LOGIN_ID_SEQ;
        </rollback>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-3">
        <comment>Add foreign Key for user_account_id</comment>
        <addForeignKeyConstraint constraintName="fk_audit_user_login_id"
                                 referencedTableName="user_account"
                                 referencedColumnNames="user_id"
                                 baseTableName="audit_user_login"
                                 baseColumnNames="user_account_id" />
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-4">
        <comment>Add enabled property to user_account table</comment>
        <addColumn tableName="user_account" >
            <column name="enabled" defaultValueBoolean="true" type="BOOLEAN">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-5">
        <comment>Add account_non_locked property to user_account table</comment>
        <addColumn tableName="user_account" >
            <column name="account_non_locked" defaultValueBoolean="true" type="BOOLEAN">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-6">
        <comment>Add lock_counter property to user_account table</comment>
        <addColumn tableName="user_account" >
            <column name="lock_counter" type="INT" defaultValueNumeric="0" >
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-7">
        <comment>Create a table named configuration</comment>
        <createTable tableName="configuration">
            <column autoIncrement="true" name="id" type="int">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="key" type="VARCHAR(255)">
                <constraints unique="true"/>
            </column>
            <column name="value" type="VARCHAR(255)"/>
            <column name="description" type="VARCHAR(512)"/>
            <column name="version" type="INT"/>
        </createTable>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-8">
        <preConditions onFail="MARK_RAN">
            <not>
                <dbms type="oracle"  />
            </not>
        </preConditions>
        <comment>Create an index on table named configuration</comment>
        <createIndex tableName="configuration" indexName="i_key_index">
            <column name="key"/>
        </createIndex>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-9" dbms="oracle">
        <comment>Create a sequence/trigger to imitate autoIncrement functionality for oracle</comment>
        <comment>trigger name, table name, sequence name Will need to be changed for each table.</comment>
        <createSequence sequenceName="CONFIGURATION_ID_SEQ"/>
        <sql splitStatements="false"> 
            create or replace trigger configuration_bef_trg 
                before insert on configuration
                    for each row begin 
                        if :new.id is null 
                         then select CONFIGURATION_ID_SEQ.nextval into :new.id from dual; 
                        end if; 
                    end; 
        </sql>
        <rollback>
            drop trigger configuration_bef_trg;
            drop sequence CONFIGURATION_ID_SEQ;
        </rollback>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-10">
        <insert tableName="configuration">
            <column name="key" value="user.lock.switch"/>
            <column name="value" value="FALSE" />
            <column name="description" value="You can enable/disable the User Locking functionality by setting the value to TRUE/FALSE" />
            <column name="version" value="0" />
        </insert>
        <rollback>
            <delete tableName="configuration">
                <where>key='user.lock.switch'</where>
            </delete>
        </rollback>
    </changeSet>
    <changeSet author="kkrumlian" id="2009-04-02-3397-11">
        <insert tableName="configuration">
            <column name="key" value="user.lock.allowedFailedConsecutiveLoginAttempts"/>
            <column name="value" value="3" />
            <column name="description" value="You can configure the number of allowed Failed Consecutive Login Attempts before Locking the system" />
            <column name="version" value="0" />
        </insert>
        <rollback>
            <delete tableName="configuration">
                <where>key='user.lock.allowedFailedConsecutiveLoginAttempts'</where>
            </delete>
        </rollback>
    </changeSet>
    
</databaseChangeLog>
