<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">


	<changeSet author="kkrumlian" id="2015-11-17-6829-1">
		<comment>Fix user_id in audit_log_event when SDV </comment>
		<sql splitStatements="false">
			update audit_log_event ale
			set user_id = ec.sdv_update_id
			FROM event_crf ec
			WHERE ale.event_crf_id = ec.event_crf_id
				AND audit_log_event_type_id = 32
				AND ale.user_id != ec.sdv_update_id
			    AND ec.sdv_update_id != 0
				AND audit_id =
					(select MAX(aleinner.audit_id) from audit_log_event aleinner where aleinner.audit_log_event_type_id = 32 and ec.event_crf_id = aleinner.event_crf_id);
		</sql>
	</changeSet>

     <changeSet author="kkrumlian" id="2015-11-17-6829-2" runOnChange="true">
    	<preConditions onFail="MARK_RAN">
	 	<dbms type="postgresql" />
		<!--<runningAs username="clinica" />-->
	</preConditions>
    	 <sql splitStatements="false">
 CREATE OR REPLACE FUNCTION event_crf_trigger() RETURNS "trigger"
		    AS 'DECLARE
			pk INTEGER;
			entity_name_value TEXT;
		BEGIN
			IF (TG_OP = ''UPDATE'') THEN
				IF(OLD.status_id <![CDATA[<>]]> NEW.status_id) THEN
				/*---------------*/
				/*Event CRF status changed*/
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value ''Status'';

				IF(OLD.status_id = ''1'' AND NEW.status_id = ''2'') THEN
				    IF (NEW.electronic_signature_status) THEN
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id,study_event_id, event_crf_version_id )
		                    VALUES (pk, ''14'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id, NEW.study_event_id ,NEW.crf_version_id);
		            ELSE
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''8'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
		            END IF;
				ELSIF (OLD.status_id = ''1'' AND NEW.status_id = ''4'') THEN
				    IF (NEW.electronic_signature_status) THEN
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''15'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
		            ELSE
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''10'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
		            END IF;
				ELSIF (OLD.status_id = ''4'' AND NEW.status_id = ''2'') THEN
		    		IF (NEW.electronic_signature_status) THEN
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''16'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
				    ELSE
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''11'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
				    END IF;
                 				ELSIF ( NEW.status_id = ''11'') THEN
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
		                    VALUES (pk, ''40'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.status_id, NEW.status_id, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);

				END IF;
				/*---------------*/
				END IF;

				IF(OLD.date_interviewed <![CDATA[<>]]> NEW.date_interviewed) THEN
				/*---------------*/
				/*Event CRF date interviewed*/
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value ''Date interviewed'';
				INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
					VALUES (pk, ''9'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.date_interviewed, NEW.date_interviewed, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
				/*---------------*/
				END IF;

				IF((OLD.interviewer_name <![CDATA[<>]]> NEW.interviewer_name) AND (OLD.interviewer_name <![CDATA[<>]]> '''')) THEN
				/*---------------*/
				/*Event CRF interviewer name*/
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value ''Interviewer Name'';
				INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
					VALUES (pk, ''9'', now(), NEW.update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, OLD.interviewer_name, NEW.interviewer_name, NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
				/*---------------*/
				END IF;

				IF(OLD.sdv_status <![CDATA[<>]]> NEW.sdv_status) THEN
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value ''EventCRF SDV Status'';
				INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id ,study_event_id, event_crf_version_id)
					VALUES (pk, ''32'', now(), NEW.sdv_update_id, ''event_crf'', NEW.event_crf_id, entity_name_value, (select case when OLD.sdv_status is true then ''TRUE'' else ''FALSE'' end),
					(select case when NEW.sdv_status is true then ''TRUE'' else ''FALSE'' end), NEW.event_crf_id , NEW.study_event_id ,NEW.crf_version_id);
				/*---------------*/
				END IF;
			RETURN NULL;  /*return values ignored for ''after'' triggers*/
			END IF;
		END;
		'
		    LANGUAGE plpgsql;

    	 </sql>
    </changeSet>
</databaseChangeLog>
