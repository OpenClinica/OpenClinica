<?xml version="1.0" encoding="UTF-8"?>

<configuration>
  
 <contextListener class="org.akaza.openclinica.log.LoggerStartupListener"/>
 
  
  <!-- APPENDERS -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
     <encoder>
      <pattern>%date{MM/dd HH:mm:ss.SSS} [%thread] %-5level %logger{35}:%L - %msg %n %ex{full}</pattern>
    </encoder>
  </appender>
 
 <!-- @pgawade 19-NOV-2010 commented out this file appender as it will not be used any where; instead new file appeders added will be used 
  <appender name="LOGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.dir}.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> -->
      <!-- daily rollover --><!--
      <fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>-->
      <!-- keep 30 days' worth of history --><!--
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}]  %-5level %logger{25}:%L - %msg %n %ex{full}</pattern>
    </encoder>
  </appender> -->
  
  <appender name="EDIT_CHECK_LOGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.dir}-editChecks.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover -->
      <fileNamePattern>${log.dir}-editChecks.%d{yyyy-MM-dd}.log</fileNamePattern>
      <!-- keep 30 days' worth of history -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}]  LPR %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
    </encoder>
  </appender>
  
  <appender name="DB_LOGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.dir}-db.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover -->
      <fileNamePattern>${log.dir}-db.%d{yyyy-MM-dd}.log</fileNamePattern>
      <!-- keep 30 days' worth of history -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] NEWS %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
    </encoder>
  </appender>
  
  <appender name="WS_LOGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.dir}-ws.log</File>
   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover -->
      <fileNamePattern>${log.dir}-ws.%d{yyyy-MM-dd}.log</fileNamePattern>
      <!-- keep 30 days' worth of history -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{MM/dd HH:mm:ss}  [%mdc{WEBAPP}] FTP %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
    </encoder>
  </appender>
    	
	<!-- @pgawade 19-NOV-2010 appenders to support Syslog -->
	<!-- Local file LPR facility -->
	<appender name="LOGFILE-LPR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityLPR"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] LPR %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file USER facility -->
	<appender name="LOGFILE-USER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityUSER"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] USER %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file MAIL facility -->
	<appender name="LOGFILE-MAIL" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityMAIL"/>
		<!--<file>${log.dir}.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] MAIL %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file AUTH facility -->
	<appender name="LOGFILE-AUTH" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityAUTH"/>	
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] AUTH %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file UUCP facility -->
	<appender name="LOGFILE-UUCP" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityUUCP"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] UUCP %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file CRON facility -->
	<appender name="LOGFILE-CRON" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityCRON"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] CRON %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file AUTHPRIV facility -->
	<appender name="LOGFILE-AUTHPRIV" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityAUTHPRIV"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] AUTHPRIV %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file DAEMON facility -->
	<appender name="LOGFILE-DAEMON" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityDAEMON"/>
		<!--<file>${log.dir}.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] DAEMON %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file NEWS facility -->
	<appender name="LOGFILE-NEWS" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] NEWS %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Local file FTP facility - to get logs excluded from other defined facilities -->
	<appender name="LOGFILE-OTHER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="org.akaza.openclinica.log.LogFilterOther"/>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<!-- daily rollover -->
			<fileNamePattern>${log.dir}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{MM/dd HH:mm:ss} [%mdc{WEBAPP}] FTP %-5level %mdc{USERNAME} %logger{25}:%L - %msg %n %ex{full}</pattern>
		</encoder>
	</appender>
	<!-- Syslog LPR facility -->
	<appender name="SYSLOG-LPR" class="ch.qos.logback.classic.net.SyslogAppender"> 
		<filter class="org.akaza.openclinica.log.LogFilterFacilityLPR"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>		
		<Facility>LPR</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>  
	<!-- Syslog USER facility -->
	<appender name="SYSLOG-USER" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityUSER"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>USER</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>	
	<!-- Syslog MAIL facility -->
	<appender name="SYSLOG-MAIL" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityMAIL"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>MAIL</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog AUTH facility -->
	<appender name="SYSLOG-AUTH" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityAUTH"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>AUTH</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog UUCP facility -->
	<appender name="SYSLOG-UUCP" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityUUCP"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>UUCP</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog CRON facility -->
	<appender name="SYSLOG-CRON" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityCRON"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>CRON</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog AUTHPRIV facility -->
	<appender name="SYSLOG-AUTHPRIV" class="ch.qos.logback.classic.net.SyslogAppender">
		<filter class="org.akaza.openclinica.log.LogFilterFacilityAUTHPRIV"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>AUTHPRIV</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog DAEMON facility -->
	<appender name="SYSLOG-DAEMON" class="ch.qos.logback.classic.net.SyslogAppender">		
		<filter class="org.akaza.openclinica.log.LogFilterFacilityDAEMON"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>DAEMON</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog NEWS facility -->
	<appender name="SYSLOG-NEWS" class="ch.qos.logback.classic.net.SyslogAppender">		
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>NEWS</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<!-- Syslog FTP facility - to get logs excluded from other defined facilities -->
	<appender name="SYSLOG-OTHER" class="ch.qos.logback.classic.net.SyslogAppender">		
		<filter class="org.akaza.openclinica.log.LogFilterOther"/>
		<SyslogHost>${syslog.host}</SyslogHost>
		<port>${syslog.port}</port>
		<Facility>FTP</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	<appender name="SYSLOG-USAGESTATS" class="ch.qos.logback.classic.net.SyslogAppender">	
		<SyslogHost>${usage.stats.host}</SyslogHost>
		<port>${usage.stats.port}</port>
		<Facility>LOCAL7</Facility>
		<SuffixPattern>[%mdc{WEBAPP}] %mdc{HOSTNAME} %mdc{USERNAME} %logger %msg</SuffixPattern>
	</appender>
	
	<!-- LOGGERS -->
  <!-- @pgawade ToDo: Commented out the follwoing loggers as these packages are covered in the new loggers added-->
  <!--
  <logger additivity="false" name="org.akaza.openclinica.web.filter">
    <level value="INFO" />
    <appender-ref ref="LOGFILE"/>
  </logger>-->
  <!-- Show the sql queries generated by Hibernate -->
  <!-- @pgawade ToDo: Commented out the follwoing loggers as these packages are covered in the new loggers added -->
  <!--
  <logger additivity="false" name="org.akaza.openclinica.control.admin">
    <level value="INFO" />
    <appender-ref ref="LOGFILE"/>
  </logger>-->
  
  <!-- Show the sql queries generated by Hibernate -->
  <logger additivity="false" name="org.hibernate.SQL">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="DB_LOGFILE"/>
		</then>	
	</if>	
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-NEWS"/>
		</then>
	</if>
  </logger>
  <!-- Show the values being binded to sql queries generated by Hibernate -->
  <logger additivity="false" name="org.hibernate.type">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="DB_LOGFILE"/>
		</then>
	</if>
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-NEWS"/>
		</then>
	</if>	
  </logger>
   <!-- <logger additivity="false" name="org.hibernate.stat">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="LOGFILE-OTHER"/>
		</then>
	</if>
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-NEWS"/>
		</then>
	</if>	
  </logger>-->
  <!-- Show All Hibernate log messages -->
  <logger additivity="false" name="org.hibernate">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="DB_LOGFILE"/>
		</then>
	</if>	
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-NEWS"/>
		</then>
	</if>
  </logger>
  <!-- Show All Spring Security log messages -->
  <logger additivity="false" name="org.springframework.security">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="LOGFILE-AUTHPRIV"/>
		</then>
	</if>    
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-AUTHPRIV"/>
		</then>
	</if>
  </logger>
  <logger additivity="false" name="org.springframework.orm.hibernate3">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="DB_LOGFILE"/>
		</then>
	</if>    
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-NEWS"/>
		</then>
	</if>
  </logger>
  <!-- Show All Spring framework io log messages -->
  <logger additivity="false" name="org.springframework.core.io">
    <level value="ERROR" />
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="LOGFILE-OTHER"/>
		</then>
	</if>    
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-OTHER"/>
		</then>
	</if>
  </logger>
  
  <!-- Show All Spring Web Services Messages -->
  <logger additivity="false" name="org.springframework.ws.server.MessageTracing.sent">
    <level value="${logLevel}" />    
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="WS_LOGFILE"/>
		</then>
	</if>
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-OTHER"/>
		</then>
	</if>
  </logger>
  <!-- Show All Spring Web Services Messages -->
  <logger additivity="false" name="org.springframework.ws.server.MessageTracing.received">
    <level value="${logLevel}" />    
	<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="WS_LOGFILE"/>
		</then>
	</if>
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-OTHER"/>
		</then>
	</if>
  </logger>
  <!-- @pgawade ToDo: Commented out the follwoing loggers as these packages are covered in the new loggers added -->
  <!--<logger name="org.akaza.openclinica.logic.rulerunner">
    <level value="INFO" />      
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="EDIT_CHECK_LOGFILE"/> 
		</then>
	</if>
	<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
		<then>
			<appender-ref ref="SYSLOG-LPR"/>
		</then>
	</if>
  </logger>-->
  <!-- @pgawade ToDo: See if this logger is needed after Syslog logging changes -->
  <!--<logger name="org.akaza.openclinica.service.crfdata">
    <level value="DEBUG" />
    <appender-ref ref="LOGFILE"/>
  </logger>-->
  <!-- @pgawade 19-NOV-2010 loggers to support Syslog -->
	
	<!-- liquibase logs -->
	<logger name="liquibase">
		<level value="INFO" />		
		<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
			<then>		
				<appender-ref ref="DB_LOGFILE"/>
			</then>
		</if>	
		<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
			<then>		
				<appender-ref ref="SYSLOG-NEWS"/>
			</then>
		</if>		
	</logger>
	<!-- OpenClinica logs -->
	<logger additivity="false" name="org.akaza.openclinica">
		<level value="${logLevel}" />	
			<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
				<then>
					<appender-ref ref="LOGFILE-OTHER"/>					
					<appender-ref ref="LOGFILE-LPR"/>
					<appender-ref ref="LOGFILE-USER"/>
					<appender-ref ref="LOGFILE-MAIL"/>
					<appender-ref ref="LOGFILE-AUTH"/>
					<appender-ref ref="LOGFILE-UUCP"/>				
					<appender-ref ref="LOGFILE-AUTHPRIV"/>									
				</then>
			</if>
			<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>			
				<then>
					<appender-ref ref="SYSLOG-OTHER"/>					
					<appender-ref ref="SYSLOG-LPR"/>
					<appender-ref ref="SYSLOG-USER"/>
					<appender-ref ref="SYSLOG-MAIL"/>
					<appender-ref ref="SYSLOG-AUTH"/>
					<appender-ref ref="SYSLOG-UUCP"/>		
					<appender-ref ref="SYSLOG-AUTHPRIV"/>									
				</then>
			</if>			
	</logger>
	<!-- application exceptions -->	
	<logger additivity="false" name="org.akaza.openclinica.exception">
		<level value="${logLevel}" />
		<if condition='property("logLocation").equalsIgnoreCase("local") || property("logLocation").equalsIgnoreCase("both")'>
			<then>	
				<appender-ref ref="LOGFILE-DAEMON"/>				
			</then>
		</if>
		<if condition='property("logLocation").equalsIgnoreCase("syslog") || property("logLocation").equalsIgnoreCase("both")'>
			<then>	
				<appender-ref ref="SYSLOG-DAEMON"/>						
			</then>
		</if>		
	</logger>
	
	<logger additivity="false" name="org.akaza.openclinica.service.usageStats.LogUsageStatsService">
		<level value="INFO" />
		<if condition='property("collectStats").equalsIgnoreCase("true")'>
			<then>
				<appender-ref ref="SYSLOG-USAGESTATS"/>	
			</then>	
		</if>	
	</logger>
    
    <logger additivity="false" name="jdbc.sqltiming">
        <level value="${logLevel}"/>
        <appender-ref ref="DB_LOGFILE"/>
    </logger>	

  <root>
    <!-- <level value="INFO" />
    <appender-ref ref="CONSOLE"/> -->
  </root>
</configuration>
