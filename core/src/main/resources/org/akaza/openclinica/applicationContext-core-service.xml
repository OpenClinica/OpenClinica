<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <!--  Service layer supports legacy DAOs via constructor injection of dataSource
          and Hibernate DAO injection via autowiring -->


    <bean id="dynamicsMetadataService" class="org.akaza.openclinica.service.crfdata.DynamicsMetadataService" autowire="byName">
        <constructor-arg ref="dataSource"/>
        <property name="randomizeService" ref="randomizeService"/>
    </bean>
    
    <bean id="ruleSetService" class="org.akaza.openclinica.service.rule.RuleSetService" autowire="byName">
        <property name="dataSource" ref="dataSource"/>
        <property name="beanPropertyService" ref="beanPropertyService"/>
        <property name="studyEventDomainDao" ref="studyEventDaoDomain"/>
        <property name="studyEventDefDomainDao" ref="studyEventDefDaoDomain"/>
        <property name="ruleActionRunLogDao" ref="ruleActionRunLogDao"/>
    </bean>
    
    <bean id="rulesPostImportContainerService" class="org.akaza.openclinica.service.rule.RulesPostImportContainerService" autowire="byName">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="subjectService" class="org.akaza.openclinica.service.subject.SubjectService">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="eventService" class="org.akaza.openclinica.service.EventService">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="randomizeService" class="org.akaza.openclinica.service.RandomizeService">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="insertActionValidator" class="org.akaza.openclinica.validator.rule.action.InsertActionValidator">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="eventActionValidator" class="org.akaza.openclinica.validator.rule.action.EventActionValidator">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="randomizeActionValidator" class="org.akaza.openclinica.validator.rule.action.RandomizeActionValidator">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="simpleConditionalDisplayService" class="org.akaza.openclinica.service.crfdata.SimpleConditionalDisplayService" autowire="byName">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="instantOnChangeService" class="org.akaza.openclinica.service.crfdata.InstantOnChangeService" autowire="byName">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="auditEventDao" class="org.akaza.openclinica.dao.admin.AuditEventDAO">
        <constructor-arg ref="dataSource"/>
    </bean>
    
    <bean id="datasetDao" class="org.akaza.openclinica.dao.extract.DatasetDAO">
        <constructor-arg ref="dataSource"/>
    </bean>
   
    <bean id="studyeventdaojdbc" class="org.akaza.openclinica.dao.managestudy.StudyEventDAO">
       <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="studyEventBeanListener" class="org.akaza.openclinica.service.rule.StudyEventBeanListener">
        <constructor-arg ref="studyeventdaojdbc"></constructor-arg>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userAccountDao" class="org.akaza.openclinica.dao.login.UserAccountDAO">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="archivedDatasetFileDao" class="org.akaza.openclinica.dao.extract.ArchivedDatasetFileDAO">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="ruleSetListenerService" class="org.akaza.openclinica.service.rule.RuleSetListenerService">
        <property name="ruleSetService" ref="ruleSetService"/>
        <property name="ruleSetDao" ref="ruleSetDao"/>
    </bean>

    <bean id="generateExtractFileService" class="org.akaza.openclinica.service.extract.GenerateExtractFileService">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="coreResources"/>
        <constructor-arg ref="ruleSetRuleDao"/>
    </bean>

    <bean id="odmFileCreation" class="org.akaza.openclinica.service.extract.OdmFileCreation">
        <property name="dataSource" ref="dataSource"/>
        <property name="coreResources" ref="coreResources"/>
        <property name="ruleSetRuleDao" ref="ruleSetRuleDao"/>
    </bean>

    <bean id="studySubjectService" class="org.akaza.openclinica.service.managestudy.StudySubjectServiceImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="eventDefinitionCrfTagService" class="org.akaza.openclinica.service.managestudy.EventDefinitionCrfTagService" autowire="byName">
        <property name="eventDefinitionCrfTagDao" ref="eventDefinitionCrfTagDao"/>
        <property name="userDaoDomain" ref="userDaoDomain"/>
    </bean>

    <bean id="viewNotesService" class="org.akaza.openclinica.service.managestudy.ViewNotesServiceImpl">
        <property name="viewNotesDao" ref="viewNotesDao"/>
    </bean>

    <bean id="crfLocker" class="org.akaza.openclinica.core.CRFLocker"/>

    <bean id = "generateClinicalDataService" class="org.akaza.openclinica.service.extract.GenerateClinicalDataServiceImpl">
        <property name="studyDao" ref="studyDaoDomain"></property>
        <property name="studySubjectDao" ref="studySubjectDaoDomain"/>
        <property name="studyEventDefDao" ref="studyEventDefDaoDomain"/>
        <property name="auditEventDAO" ref="auditLogEventDaoDomain"/>
        <property name="userAccountDao" ref="userDaoDomain"/>
        <property name="studyUserRoleDao" ref="studyUserRoleDao"/>        
    </bean>

    <bean id="beanPropertyService" class="org.akaza.openclinica.service.crfdata.BeanPropertyService" autowire="byName">
        <constructor-arg ref="dataSource"/>
        <property name="studyEventDAO" ref="studyEventDaoDomain"/>
        <property name="studyEventDefinitionDao" ref="studyEventDefDaoDomain"/>
        <property name="studySubjectDao" ref = "studySubjectDaoDomain"/>
        <property name="userAccountDao" ref="userDaoDomain"/>
    </bean>

    <bean id="odmImportServiceImpl" class="org.akaza.openclinica.service.OdmImportServiceImpl" autowire="byName">
        <constructor-arg ref="dataSource"/>
        <property name="studyEventDefDao" ref="studyEventDefDaoDomain"/>
        <property name="userAccountDao" ref="userDaoDomain"/>
        <property name="studyUserRoleDao" ref="studyUserRoleDao"/>        
        <property name="crfDao" ref="crfDao"/>        
        <property name="crfVersionDao" ref="crfVersionDao"/>        
        <property name="eventDefinitionCrfDao" ref="eventDefinitionCrfDao"/>        
        <property name="eventDefinitionCrfTagDao" ref="eventDefinitionCrfTagDao"/>        
        <property name="studyDao" ref="studyDaoDomain"/>
        <property name="studyParameterValueDao" ref="studyParameterValueDao"/>
        <property name="xformParser" ref="xformParser"/>
        <property name="coreResources" ref="coreResources"/>
    </bean>
    <bean id = "enketoCredentials" class="org.akaza.openclinica.service.crfdata.xform.EnketoCredentials">
        <property name="studyDao" ref="studyDaoDomain"/>
    </bean>

    <bean id="xformParserHelper" class="org.akaza.openclinica.domain.xform.XformParserHelper"/>

    <bean id="xformParser" class="org.akaza.openclinica.domain.xform.XformParser">
        <property name="dataSource" ref="dataSource"></property>
        <property name="coreResources" ref="coreResources"/>
    </bean>
<!-- moved from core-security-->
    <bean id="xformService" class="org.akaza.openclinica.service.crfdata.XformMetaDataService"/>
    <bean id="responseSetService" class="org.akaza.openclinica.service.crfdata.ResponseSetService"/>

    <bean id="ExpressionService" class="org.akaza.openclinica.service.rule.expression.ExpressionService">
       <constructor-arg ref="dataSource"/>
    </bean>

    <context:component-scan base-package="org.akaza.openclinica.controller.openrosa"/>

</beans>
