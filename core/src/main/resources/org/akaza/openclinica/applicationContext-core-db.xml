<?xml version="1.0" encoding="UTF-8"?>

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">


    <!--  Service layer supports legacy DAOs via constructor injection of dataSource
          and Hibernate DAO injection via autowiring -->

    <bean id="dataSource" class="org.akaza.openclinica.core.ExtendedBasicDataSource" primary="true">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="maxTotal" value="50"/>
        <property name="maxIdle" value="2"/>
        <property name="maxWaitMillis" value="180000"/>
        <property name="removeAbandonedOnBorrow" value="true"/>
        <property name="removeAbandonedTimeout" value="300"/>
        <property name="logAbandoned" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="300000"/>
        <property name="minEvictableIdleTimeMillis" value="600000"/>
        <property name="url" value="s[url]"/>
        <property name="username" value="s[username]"/>
        <property name="password" value="s[password]"/>
        <property name="bigStringTryClob" value="true"/>
        <qualifier value="dataSource"/>
    </bean>

    <bean id="queryStore" class="org.akaza.openclinica.dao.QueryStore" init-method="init">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
