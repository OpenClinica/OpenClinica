# ViewNotesDao#findAllDiscrepancyNotes 

findAllDiscrepancyNotes.limit=limit :limit offset :offset

findAllDiscrepancyNotes.filter.studyHideCrf=and (edc_study.hide_crf = false or edc_study.hide_crf is null) 

findAllDiscrepancyNotes.filter.siteHideCrf=and edc_study.hide_crf is not true and edc_site.hide_crf is not true
findAllDiscrepancyNotes.filter.permissionTags=and (permission_tag_id is null or (permission_tag_id in (:userTags)))
findAllDiscrepancyNotes.filter.permissionTagsEmptyUserTags=and permission_tag_id is null


findAllDiscrepancyNotes.filter.label=and LOWER(label) like LOWER(:label)
findAllDiscrepancyNotes.filter.discrepancy_note_type_id=and discrepancy_note_type_id in ( :discrepancy_note_type_id )
findAllDiscrepancyNotes.filter.resolution_status_id=and resolution_status_id in ( :resolution_status_id )
findAllDiscrepancyNotes.filter.site_id=and LOWER(unique_identifier) like LOWER(:site_id)
findAllDiscrepancyNotes.filter.date_created=and date(date_created) = :date_created
findAllDiscrepancyNotes.filter.date_updated=and date(date_updated) = :date_updated
findAllDiscrepancyNotes.filter.days=and days = :days
findAllDiscrepancyNotes.filter.age=and age = :age
findAllDiscrepancyNotes.filter.event_name=and LOWER(sed.name) like LOWER(:event_name)
findAllDiscrepancyNotes.filter.crf_name=and LOWER(c.name) like LOWER(:crf_name)
findAllDiscrepancyNotes.filter.entity_name=and LOWER(i.name) like LOWER(:entity_name)
findAllDiscrepancyNotes.filter.value=and LOWER(value) like LOWER(:value)
findAllDiscrepancyNotes.filter.entity_type=and LOWER(entity_type) like LOWER(:entity_type)
findAllDiscrepancyNotes.filter.description=and LOWER(description) like LOWER(:description)
findAllDiscrepancyNotes.filter.user=and (LOWER(ua1.user_name) like LOWER(:user) or LOWER(ua1.first_name) like LOWER(:user) or LOWER(ua1.last_name) like LOWER(:user))
findAllDiscrepancyNotes.filter.detailed_notes=and LOWER(detailed_notes) like LOWER(:detailed_notes)
findAllDiscrepancyNotes.filter.thread_number=and thread_number = :thread_number
findAllDiscrepancyNotes.orderby=order by

findAllDiscrepancyNotes.sort.label=label
findAllDiscrepancyNotes.sort.date_created=date_created
findAllDiscrepancyNotes.sort.days=days
findAllDiscrepancyNotes.sort.age=age
findAllDiscrepancyNotes.sort.unique_identifier=unique_identifier
findAllDiscrepancyNotes.sort.thread_number=thread_number

discrepancyNotes.count.select= select discrepancy_note_type_id, resolution_status_id, count(1) as "total" from ( \ 
discrepancyNotes.count.group= )as disc group by discrepancy_note_type_id, resolution_status_id \

discrepancyNotes.main.select= select dn.* , \
  ss.study_subject_id, ss.label, ss.status_id ss_status_id , \
  s.unique_identifier , \
  didm.item_data_id , \
  dsem.study_event_id ,dsem.column_name , \
  ua1.user_name assigned_user_name,ua1.first_name assigned_first_name,ua1.last_name assigned_last_name ,ua2.user_name owner_user_name,ua2.first_name owner_first_name,ua2.last_name owner_last_name , \
  totals.total_notes, totals.date_updated, day_calc.age, day_calc.days , i.name entity_name \

discrepancyNotes.main.join= from discrepancy_note dn \
  LEFT JOIN dn_study_event_map dsem ON dn.discrepancy_note_id=dsem.discrepancy_note_id \
  LEFT JOIN study_event se_event ON se_event.study_event_id = dsem.study_event_id \
  LEFT JOIN dn_item_data_map didm ON dn.discrepancy_note_id=didm.discrepancy_note_id \
  LEFT JOIN study_subject ss ON ss.study_subject_id = didm.study_subject_id or ss.study_subject_id=se_event.study_subject_id \
  LEFT JOIN item_data id ON id.item_data_id=didm.item_data_id \
  LEFT JOIN study s ON s.study_id=ss.study_id \
  LEFT JOIN event_crf ec ON ec.event_crf_id= id.event_crf_id \
  LEFT JOIN study_event se_item ON ec.study_event_id=se_item.study_event_id \
  LEFT JOIN study_event_definition sed ON sed.study_event_definition_id=se_item.study_event_definition_id  or sed.study_event_definition_id=se_event.study_event_definition_id \
  LEFT JOIN crf_version cv ON cv.crf_version_id=ec.crf_version_id \
  LEFT JOIN crf c ON c.crf_id = cv.crf_id LEFT JOIN item i ON i.item_id = id.item_id \
  LEFT JOIN user_account ua1 ON ua1.user_Id=dn.assigned_user_id \
  LEFT JOIN user_account ua2 ON ua2.user_Id=dn.owner_id \
  LEFT JOIN ( SELECT dn1.parent_dn_id, max(dn1.date_created) AS date_updated, count(dn1.discrepancy_note_id) AS total_notes FROM discrepancy_note dn1 GROUP BY dn1.parent_dn_id) totals ON totals.parent_dn_id= dn.discrepancy_note_id \
  LEFT JOIN event_definition_crf edc_study ON edc_study.study_event_definition_id=sed.study_event_definition_id AND edc_study.crf_id = c.crf_id AND  (edc_study.study_id = s.study_id OR edc_study.study_id = s.parent_study_id) AND (edc_study.parent_id = 0  OR edc_study.parent_id IS NULL) \
  LEFT JOIN event_definition_crf edc_site ON edc_site.study_event_definition_id=sed.study_event_definition_id AND edc_site.crf_id = c.crf_id AND edc_site.study_id = s.study_id AND (edc_site.parent_id <> 0  OR edc_site.parent_id IS NOT NULL) \
  LEFT JOIN event_definition_crf_permission_tag edcpt ON edcpt.event_definition_crf_id=edc_study.event_definition_crf_id \
  LEFT JOIN (SELECT dn.discrepancy_note_id,CASE WHEN dn.resolution_status_id = ANY (ARRAY[1, 2, 3]) THEN DATE_PART ('day',current_timestamp - (( SELECT cdn.date_created FROM discrepancy_note cdn WHERE cdn.discrepancy_note_id = (( SELECT max (idn.discrepancy_note_id) AS max FROM discrepancy_note idn WHERE idn.parent_dn_id = dn.discrepancy_note_id))))) ELSE NULL::integer END AS days, CASE WHEN dn.resolution_status_id = 4 THEN DATE_PART('day',(( SELECT cdn.date_created FROM discrepancy_note cdn WHERE cdn.discrepancy_note_id = (( SELECT max(idn.discrepancy_note_id) AS max FROM discrepancy_note idn WHERE idn.parent_dn_id = dn.discrepancy_note_id)))) - dn.date_created) WHEN dn.resolution_status_id = ANY (ARRAY[1, 2, 3]) THEN DATE_PART ('day',current_timestamp - dn.date_created) ELSE NULL:: integer END AS age FROM discrepancy_note dn WHERE dn.parent_dn_id IS NULL ) day_calc on day_calc.discrepancy_note_id= dn.discrepancy_note_id  


discrepancyNotes.main.where= where (s.study_id = :studyId or s.parent_study_id= :studyId) and (dn.parent_dn_id IS NULL OR dn.parent_dn_id = 0) \

discrepancyNotes.main.custom.join = from discrepancy_note dn \
  LEFT JOIN dn_item_data_map didm ON dn.discrepancy_note_id=didm.discrepancy_note_id \
  LEFT JOIN dn_study_event_map dsem ON dn.discrepancy_note_id=dsem.discrepancy_note_id \
  LEFT JOIN study_subject ss ON ss.study_subject_id = didm.study_subject_id \
  LEFT JOIN study s ON s.study_id=ss.study_id \
  LEFT JOIN study_event se_item ON se_item.study_subject_id=ss.study_subject_id \
  LEFT JOIN event_crf ec ON ec.study_event_id=se_item.study_event_id and ec.study_subject_id=ss.study_subject_id \
  LEFT JOIN item_data id ON id.event_crf_id=ec.event_crf_id and id.ordinal=1 \
  LEFT JOIN item i ON i.item_id=id.item_id \
  LEFT JOIN study_event_definition sed ON sed.study_event_definition_id=se_item.study_event_definition_id \
  LEFT JOIN crf_version cv ON cv.crf_version_id=ec.crf_version_id \
  LEFT JOIN crf c ON c.crf_id = cv.crf_id \
  LEFT JOIN user_account ua1 ON ua1.user_Id=dn.assigned_user_id \
  LEFT JOIN user_account ua2 ON ua2.user_Id=dn.owner_id \
  LEFT JOIN ( SELECT dn1.parent_dn_id, max(dn1.date_created) AS date_updated, count(dn1.discrepancy_note_id) AS total_notes FROM discrepancy_note dn1 GROUP BY dn1.parent_dn_id) totals ON totals.parent_dn_id= dn.discrepancy_note_id \
  LEFT JOIN event_definition_crf edc_study ON edc_study.study_event_definition_id=sed.study_event_definition_id AND edc_study.crf_id = c.crf_id AND  (edc_study.study_id = s.study_id OR edc_study.study_id = s.parent_study_id) AND (edc_study.parent_id = 0  OR edc_study.parent_id IS NULL) \
  LEFT JOIN event_definition_crf edc_site ON edc_site.study_event_definition_id=sed.study_event_definition_id AND edc_site.crf_id = c.crf_id AND edc_site.study_id = s.study_id AND (edc_site.parent_id <> 0  OR edc_site.parent_id IS NOT NULL) \
  LEFT JOIN event_definition_crf_permission_tag edcpt ON edcpt.event_definition_crf_id=edc_study.event_definition_crf_id \
  LEFT JOIN (SELECT dn.discrepancy_note_id,CASE WHEN dn.resolution_status_id = ANY (ARRAY[1, 2, 3]) THEN DATE_PART ('day',current_timestamp - (( SELECT cdn.date_created FROM discrepancy_note cdn WHERE cdn.discrepancy_note_id = (( SELECT max (idn.discrepancy_note_id) AS max FROM discrepancy_note idn WHERE idn.parent_dn_id = dn.discrepancy_note_id))))) ELSE NULL::integer END AS days, CASE WHEN dn.resolution_status_id = 4 THEN DATE_PART('day',(( SELECT cdn.date_created FROM discrepancy_note cdn WHERE cdn.discrepancy_note_id = (( SELECT max(idn.discrepancy_note_id) AS max FROM discrepancy_note idn WHERE idn.parent_dn_id = dn.discrepancy_note_id)))) - dn.date_created) WHEN dn.resolution_status_id = ANY (ARRAY[1, 2, 3]) THEN DATE_PART ('day',current_timestamp - dn.date_created) ELSE NULL:: integer END AS age FROM discrepancy_note dn WHERE dn.parent_dn_id IS NULL ) day_calc on day_calc.discrepancy_note_id= dn.discrepancy_note_id  
