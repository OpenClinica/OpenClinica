<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd


                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.2.xsd
                           http://www.springframework.org/schema/security/oauth2 
                           http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


  <security:http entry-point-ref="authenticationProcessingFilterEntryPoint" use-expressions="true">
    
    <security:anonymous />
    <security:intercept-url pattern="/pages/login/login" access="permitAll"/>
    <security:intercept-url pattern="/SystemStatus" access="permitAll"/>
    <security:intercept-url pattern="/RssReader" access="permitAll"/>
    <security:intercept-url pattern="/RequestPassword" access="permitAll"/>
    <security:intercept-url pattern="/RequestAccount" access="permitAll"/>
    <security:intercept-url pattern="/includes/**" access="permitAll"/>
    <security:intercept-url pattern="/images/**" access="permitAll"/>
    <security:intercept-url pattern="/help/**" access="permitAll"/>
    <security:intercept-url pattern="/ws/**" access="permitAll"/>
    <security:intercept-url pattern="/Contact" access="permitAll"/>
    <!--
    <security:form-login login-page="/pages/login/login" authentication-failure-url="/pages/login/login?action=errorLogin"
      default-target-url='/MainMenu' always-use-default-target='true' />
     -->
    <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    <security:custom-filter position="FORM_LOGIN_FILTER" ref="myFilter" />
    <!--  <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" /> -->
    <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    <security:session-management session-authentication-strategy-ref="sas"/>
      <security:logout logout-success-url="/MainMenu" logout-url="/j_spring_security_logout" />
      <security:access-denied-handler error-page="/accounts/denied.htm"/>
      <security:csrf disabled="true"/>
    
  </security:http>

    <bean id="authenticationProcessingFilterEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/pages/login/login"/>
        <property name="forceHttps" value="false"/>
    </bean>
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="ocUserDetailsService">
            <security:password-encoder ref="openClinicaPasswordEncoder"/>
        </security:authentication-provider>
        <security:authentication-provider ref="ldapAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="shaPasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>
    <bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <bean id="openClinicaPasswordEncoder" class="org.akaza.openclinica.core.OpenClinicaPasswordEncoder">
        <property name="currentPasswordEncoder" ref="shaPasswordEncoder"/>
        <property name="oldPasswordEncoder" ref="md5PasswordEncoder"/>
    </bean>

    <bean id="securityManager" class="org.akaza.openclinica.core.SecurityManager">
        <property name="encoder" ref="openClinicaPasswordEncoder"/>
        <property name="providers">
            <list>
                <ref bean="ldapAuthenticationProvider"/>
                <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
                    <property name="userDetailsService" ref="ocUserDetailsService"/>
                    <property name="passwordEncoder" ref="openClinicaPasswordEncoder"/>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="ocUserDetailsService" class="org.akaza.openclinica.web.filter.OpenClinicaJdbcService"
          p:dataSource-ref="dataSource"
          p:usersByUsernameQuery="SELECT user_name,passwd,enabled,account_non_locked FROM user_account WHERE user_name = ?">
        <property name="enableAuthorities" value="true"/>
    </bean>
    <bean id="myFilter" class="org.akaza.openclinica.web.filter.OpenClinicaUsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="failureHandler" />
        <property name="authenticationSuccessHandler" ref="successHandler" />
        <!--
        <property name="authenticationFailureUrl" value="/pages/login/login?action=errorLogin"/>
        <property name="defaultTargetUrl" value="/MainMenu"/>
         -->
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="configurationDao" ref="configurationDao"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="allowSessionCreation" value="true" />
        <property name="sessionAuthenticationStrategy" ref="sas"/>
    </bean>
    
    <bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" >
        <property name="defaultTargetUrl" value="/MainMenu" /> <!-- which is the default value -->
    </bean>
    
    <bean id="failureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" >
        <property name="defaultFailureUrl" value="/pages/login/login?action=errorLogin" />
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.authentication.LockedException">/pages/login/login?action=errorLocked</prop>
            </props>
        </property>
    </bean>

    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg ref="sessionRegistry" />
        <constructor-arg value="/MainMenu" />
        <property name="logoutHandlers">
            <list>
                <ref bean="openClinicaLogoutHandler"/>
            </list>
        </property>
    </bean>
     
     <bean id="sessionRegistry" class="org.akaza.openclinica.web.filter.OpenClinicaSessionRegistryImpl">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
     </bean>

    <bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
        <constructor-arg ref="sessionRegistry" />
        <property name="maximumSessions" value="1" />
    </bean>

    
    <bean id="openClinicaLogoutHandler" class="org.akaza.openclinica.web.filter.OpenClinicaSecurityContextLogoutHandler">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 
     <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="/MainMenu"></constructor-arg>
        <constructor-arg>
            <list>
               <ref bean="openClinicaLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/j_spring_security_logout" />
    </bean>
     -->	
    <!--<security:global-method-security secured-annotations="enabled">
        <security:protect-pointcut
            expression="execution(* com.springsource..*Service.*(..))"
            access="ROLE_USER" />
    </security:global-method-security>
    -->

    <bean id="inMemoryTokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore">
        <property name="flushInterval" value="30"/>
    </bean>

    <bean id="jdbcTokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="inMemoryTokenStore" />
        <property name="supportRefreshToken" value="true" />
        <property name="clientDetailsService" ref="clientDetails" />
    </bean>

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="test" authorized-grant-types="password,authorization_code,refresh-token"/>
        <oauth:client client-id="my-trusted-client" authorized-grant-types="password,authorization_code,refresh_token"/>
        <oauth:client client-id="my-less-trusted-client" authorized-grant-types="authorization_code"/>
        <oauth:client client-id="designer" authorized-grant-types="authorization_code,refresh_token"/>
    </oauth:client-details-service>

    <oauth:authorization-server
            client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code />
        <oauth:implicit />
        <oauth:refresh-token />
        <oauth:client-credentials />
    </oauth:authorization-server>
    
</beans>